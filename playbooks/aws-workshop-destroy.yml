---

- name: destroy AWS resources
  hosts: localhost
  connection: local
  vars_files:
    - ../group_vars/all
  tasks:
    - name: gather instance facts
      ec2_instance_info:
        region: "{{ ec2_region }}"
        filters:
          instance.group-name: "{{ group_name }}"
      register: facts

    - name: destroy instances
      ec2:
        region: "{{ ec2_region }}"
        instance_id: "{{ item.instance_id }}"
        state: absent
        wait: true
      with_items: "{{ facts.instances }}"

    - name: gather ebs facts
      ec2_vol_info:
        region: "{{ ec2_region }}"
        filters:
          "tag:Name": "{{ workshop_name }}"
      register: ebs_facts

    - name: destroy ebs
      ec2_vol:
        region: "{{ ec2_region }}"
        id: "{{ item.id }}"
        state: absent
      with_items: "{{ ebs_facts.volumes }}"

    - name: destroy keypair
      ec2_key:
        name: "{{ workshop_name }}"
        region: "{{ ec2_region }}"
        state: absent
      register: key

    - name: gather vpc facts
      ec2_vpc_net_info:
        region: "{{ ec2_region }}"
        filters:
          "tag:Name": "{{ workshop_name }}"
      register: vpc

    - name: early exit
      meta: end_play
      when: vpc.vpcs|length == 0

    - name: gather security group facts
      ec2_group_info:
        region: "{{ ec2_region }}"
        filters:
          vpc-id: "{{ vpc.vpcs[0].vpc_id }}"
      register: sg

    - name: destroy security groups
      ec2_group:
        region: "{{ ec2_region }}"
        group_id: "{{ item.group_id }}"
        state: absent
      with_items: "{{ sg.security_groups }}"

    - name: destroy vpc subnet
      ec2_vpc_subnet:
        region: "{{ ec2_region }}"
        vpc_id: "{{ item.vpc_id }}"
        cidr: "{{ vpc_cidr_block }}"
        state: absent
      with_items: "{{ facts.instances }}"
      register: subnets

    - name: gather route table facts
      ec2_vpc_route_table_info:
        region: "{{ ec2_region }}"
        filters:
          vpc-id: "{{ vpc.vpcs[0].vpc_id }}"
      register: route_tables

    - name: destroy vpc route table
      ec2_vpc_route_table:
        vpc_id: "{{ vpc.vpcs[0].vpc_id }}"
        region: "{{ ec2_region }}"
        state: absent
        route_table_id: "{{ item.id }}"
        lookup: id
      with_items: "{{ route_tables.route_tables }}"

    - name: destroy vpc
      ec2_vpc_net:
        region: "{{ ec2_region }}"
        cidr_block: "{{ vpc_cidr_block }}"
        name: "{{ workshop_name }}"
        state: absent
