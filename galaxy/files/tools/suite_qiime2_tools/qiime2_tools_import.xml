<?xml version='1.0' encoding='utf-8'?>
<!--
Copyright (c) 2021, QIIME 2 development team.

Distributed under the terms of the Modified BSD License. (SPDX: BSD-3-Clause)
-->
<!--
This tool was automatically generated by:
    q2galaxy (version: 2022.2.0.dev0+1.g7aeee07)
for:
    qiime2 (version: 2022.2.0.dev0)
-->
<tool name="qiime2 tools import" id="qiime2_tools_import" version="2022.2.0.dev0+1.g7aeee07+dist.hedca8cee" profile="20.09" license="BSD-3-Clause">
    <description>Import data into a QIIME 2 artifact</description>
    <requirements>
        <requirement type="package" version="2022.2.0.dev0+1.g7aeee07">q2galaxy</requirement>
        <requirement type="package" version="2022.2.0.dev0+1.gb149232">q2-diversity-lib</requirement>
        <requirement type="package" version="2022.2.0.dev0+1.gae2607f">q2-dada2</requirement>
        <requirement type="package" version="2022.2.0.dev0+1.g8e9ad83">q2-taxa</requirement>
        <requirement type="package" version="2022.2.0.dev0+1.g81852b2">q2-feature-table</requirement>
        <requirement type="package" version="2022.2.0.dev0+1.g6d7e723">q2-diversity</requirement>
        <requirement type="package" version="2022.2.0.dev0+1.g528bc07">q2-demux</requirement>
        <requirement type="package" version="2022.2.0.dev0+1.g4483766">q2-types</requirement>
        <requirement type="package" version="2022.2.0.dev0">q2-cutadapt</requirement>
        <requirement type="package" version="2022.2.0.dev0">q2-vsearch</requirement>
        <requirement type="package" version="2022.2.0.dev0">q2-quality-filter</requirement>
        <requirement type="package" version="2022.2.0.dev0">q2-fragment-insertion</requirement>
        <requirement type="package" version="2022.2.0.dev0">q2-emperor</requirement>
        <requirement type="package" version="2022.2.0.dev0">q2-sample-classifier</requirement>
        <requirement type="package" version="2022.2.0.dev0">q2-gneiss</requirement>
        <requirement type="package" version="2022.2.0.dev0">q2-quality-control</requirement>
        <requirement type="package" version="2022.2.0.dev0">q2-deblur</requirement>
        <requirement type="package" version="2022.2.0.dev0">q2-longitudinal</requirement>
        <requirement type="package" version="2022.2.0.dev0">q2-composition</requirement>
        <requirement type="package" version="2022.2.0.dev0">q2-alignment</requirement>
        <requirement type="package" version="2022.2.0.dev0">q2-phylogeny</requirement>
        <requirement type="package" version="2022.2.0.dev0">q2-metadata</requirement>
        <requirement type="package" version="2022.2.0.dev0">q2-feature-classifier</requirement>
        <requirement type="package" version="2.1.10">biom-format</requirement>
        <requirement type="package" version="7.1.2">click</requirement>
        <requirement type="package" version="3.8.12">python</requirement>
        <requirement type="package" version="12.0.1">libcxx</requirement>
        <requirement type="package" version="3.4.2">libffi</requirement>
        <requirement type="package" version="1.2.11">libzlib</requirement>
        <requirement type="package" version="1.1.1l">openssl</requirement>
        <requirement type="package" version="2021.10.8">ca-certificates</requirement>
        <requirement type="package" version="8.1">readline</requirement>
        <requirement type="package" version="6.2">ncurses</requirement>
        <requirement type="package" version="3.37.0">sqlite</requirement>
        <requirement type="package" version="1.2.11">zlib</requirement>
        <requirement type="package" version="8.6.11">tk</requirement>
        <requirement type="package" version="5.2.5">xz</requirement>
        <requirement type="package" version="21.3.1">pip</requirement>
        <requirement type="package" version="59.4.0">setuptools</requirement>
        <requirement type="package" version="3.8">python_abi</requirement>
        <requirement type="package" version="0.37.0">wheel</requirement>
        <requirement type="package" version="0.18.2">future</requirement>
        <requirement type="package" version="3.3.0">h5py</requirement>
        <requirement type="package" version="1.5.2">cached-property</requirement>
        <requirement type="package" version="1.5.2">cached_property</requirement>
        <requirement type="package" version="1.10.6">hdf5</requirement>
        <requirement type="package" version="7.80.0">libcurl</requirement>
        <requirement type="package" version="1.19.2">krb5</requirement>
        <requirement type="package" version="3.1.20191231">libedit</requirement>
        <requirement type="package" version="1.43.0">libnghttp2</requirement>
        <requirement type="package" version="1.18.1">c-ares</requirement>
        <requirement type="package" version="4.33">libev</requirement>
        <requirement type="package" version="1.10.0">libssh2</requirement>
        <requirement type="package" version="5.0.0">libgfortran</requirement>
        <requirement type="package" version="9.3.0">libgfortran5</requirement>
        <requirement type="package" version="12.0.1">llvm-openmp</requirement>
        <requirement type="package" version="1.21.4">numpy</requirement>
        <requirement type="package" version="3.9.0">libblas</requirement>
        <requirement type="package" version="0.3.18">libopenblas</requirement>
        <requirement type="package" version="3.9.0">libcblas</requirement>
        <requirement type="package" version="3.9.0">liblapack</requirement>
        <requirement type="package" version="1.2.5">pandas</requirement>
        <requirement type="package" version="2.8.2">python-dateutil</requirement>
        <requirement type="package" version="1.16.0">six</requirement>
        <requirement type="package" version="2021.3">pytz</requirement>
        <requirement type="package" version="1.7.3">scipy</requirement>
        <requirement type="package" version="4.4.2">decorator</requirement>
        <requirement type="package" version="5.8.0">psutil</requirement>
        <requirement type="package" version="2022.2.0.dev0+1.g4483766">q2-types</requirement>
        <requirement type="package" version="3.1.3">ijson</requirement>
        <requirement type="package" version="2022.2.0.dev0">qiime2</requirement>
        <requirement type="package" version="1.1.0">bibtexparser</requirement>
        <requirement type="package" version="3.0.6">pyparsing</requirement>
        <requirement type="package" version="0.3.4">dill</requirement>
        <requirement type="package" version="2.6.3">networkx</requirement>
        <requirement type="package" version="3.5.0">matplotlib-base</requirement>
        <requirement type="package" version="2021.10.8">certifi</requirement>
        <requirement type="package" version="0.11.0">cycler</requirement>
        <requirement type="package" version="4.28.2">fonttools</requirement>
        <requirement type="package" version="1.0.9">brotli</requirement>
        <requirement type="package" version="1.0.9">brotli-bin</requirement>
        <requirement type="package" version="1.0.9">libbrotlidec</requirement>
        <requirement type="package" version="1.0.9">libbrotlicommon</requirement>
        <requirement type="package" version="1.0.9">libbrotlienc</requirement>
        <requirement type="package" version="1.1.4">munkres</requirement>
        <requirement type="package" version="13.0.0.post2">unicodedata2</requirement>
        <requirement type="package" version="2.10.4">freetype</requirement>
        <requirement type="package" version="1.6.37">libpng</requirement>
        <requirement type="package" version="1.3.2">kiwisolver</requirement>
        <requirement type="package" version="21.3">packaging</requirement>
        <requirement type="package" version="8.4.0">pillow</requirement>
        <requirement type="package" version="9d">jpeg</requirement>
        <requirement type="package" version="2.12">lcms2</requirement>
        <requirement type="package" version="4.3.0">libtiff</requirement>
        <requirement type="package" version="2.1">jbig</requirement>
        <requirement type="package" version="2.2.1">lerc</requirement>
        <requirement type="package" version="1.7">libdeflate</requirement>
        <requirement type="package" version="1.2.1">libwebp-base</requirement>
        <requirement type="package" version="1.5.0">zstd</requirement>
        <requirement type="package" version="1.9.3">lz4-c</requirement>
        <requirement type="package" version="0.46">olefile</requirement>
        <requirement type="package" version="2.4.0">openjpeg</requirement>
        <requirement type="package" version="6.0">pyyaml</requirement>
        <requirement type="package" version="0.2.5">yaml</requirement>
        <requirement type="package" version="2.1">tzlocal</requirement>
        <requirement type="package" version="0.5.6">scikit-bio</requirement>
        <requirement type="package" version="0.12.10">cachecontrol</requirement>
        <requirement type="package" version="1.0.3">msgpack-python</requirement>
        <requirement type="package" version="2.26.0">requests</requirement>
        <requirement type="package" version="2.0.8">charset-normalizer</requirement>
        <requirement type="package" version="3.1">idna</requirement>
        <requirement type="package" version="1.26.7">urllib3</requirement>
        <requirement type="package" version="0.7.0">brotlipy</requirement>
        <requirement type="package" version="1.15.0">cffi</requirement>
        <requirement type="package" version="2.21">pycparser</requirement>
        <requirement type="package" version="36.0.0">cryptography</requirement>
        <requirement type="package" version="21.0.0">pyopenssl</requirement>
        <requirement type="package" version="1.7.1">pysocks</requirement>
        <requirement type="package" version="0.14.2">hdmedians</requirement>
        <requirement type="package" version="0.29.24">cython</requirement>
        <requirement type="package" version="7.30.1">ipython</requirement>
        <requirement type="package" version="0.1.2">appnope</requirement>
        <requirement type="package" version="0.2.0">backcall</requirement>
        <requirement type="package" version="0.18.1">jedi</requirement>
        <requirement type="package" version="0.8.3">parso</requirement>
        <requirement type="package" version="0.1.3">matplotlib-inline</requirement>
        <requirement type="package" version="5.1.1">traitlets</requirement>
        <requirement type="package" version="4.8.0">pexpect</requirement>
        <requirement type="package" version="0.7.0">ptyprocess</requirement>
        <requirement type="package" version="0.7.5">pickleshare</requirement>
        <requirement type="package" version="3.0.22">prompt-toolkit</requirement>
        <requirement type="package" version="0.2.5">wcwidth</requirement>
        <requirement type="package" version="1.6.4">backports.functools_lru_cache</requirement>
        <requirement type="package" version="1.0">backports</requirement>
        <requirement type="package" version="2.10.0">pygments</requirement>
        <requirement type="package" version="0.12.2">lockfile</requirement>
        <requirement type="package" version="8.0.0">natsort</requirement>
        <requirement type="package" version="6.2.5">pytest</requirement>
        <requirement type="package" version="21.2.0">attrs</requirement>
        <requirement type="package" version="1.1.1">iniconfig</requirement>
        <requirement type="package" version="8.12.0">more-itertools</requirement>
        <requirement type="package" version="1.0.0">pluggy</requirement>
        <requirement type="package" version="1.11.0">py</requirement>
        <requirement type="package" version="0.10.2">toml</requirement>
        <requirement type="package" version="0.24.1">scikit-learn</requirement>
        <requirement type="package" version="1.1.0">joblib</requirement>
        <requirement type="package" version="3.0.0">threadpoolctl</requirement>
        <requirement type="package" version="0.20.2">unifrac</requirement>
        <requirement type="package" version="3.9.0">liblapacke</requirement>
        <requirement type="package" version="3.1.10">lz4</requirement>
        <requirement type="package" version="1.22.0">bioconductor-dada2</requirement>
        <requirement type="package" version="0.40.0">bioconductor-biocgenerics</requirement>
        <requirement type="package" version="4.1.1">r-base</requirement>
        <requirement type="package" version="1.0.1">_r-mutex</requirement>
        <requirement type="package" version="1.9.14">bwidget</requirement>
        <requirement type="package" version="1.0.8">bzip2</requirement>
        <requirement type="package" version="1.16.0">cairo</requirement>
        <requirement type="package" version="2.13.1">fontconfig</requirement>
        <requirement type="package" version="2.9.12">libxml2</requirement>
        <requirement type="package" version="68.2">icu</requirement>
        <requirement type="package" version="1.16">libiconv</requirement>
        <requirement type="package" version="2.70.1">libglib</requirement>
        <requirement type="package" version="0.19.8.1">gettext</requirement>
        <requirement type="package" version="8.45">pcre</requirement>
        <requirement type="package" version="0.40.0">pixman</requirement>
        <requirement type="package" version="12.0.1">clang_osx-64</requirement>
        <requirement type="package" version="973.0.1">cctools_osx-64</requirement>
        <requirement type="package" version="609">ld64_osx-64</requirement>
        <requirement type="package" version="2.1.2">ldid</requirement>
        <requirement type="package" version="12.0.1">libllvm12</requirement>
        <requirement type="package" version="1100.0.11">tapi</requirement>
        <requirement type="package" version="12.0.1">clang</requirement>
        <requirement type="package" version="12.0.1">clang-12</requirement>
        <requirement type="package" version="12.0.1">libclang-cpp12</requirement>
        <requirement type="package" version="12.0.1">compiler-rt</requirement>
        <requirement type="package" version="12.0.1">clangxx</requirement>
        <requirement type="package" version="12.0.1">compiler-rt_osx-64</requirement>
        <requirement type="package" version="12.0.1">llvm-tools</requirement>
        <requirement type="package" version="12.0.1">clangxx_osx-64</requirement>
        <requirement type="package" version="7.80.0">curl</requirement>
        <requirement type="package" version="9.3.0">gfortran_osx-64</requirement>
        <requirement type="package" version="9.3.0">gfortran_impl_osx-64</requirement>
        <requirement type="package" version="6.2.1">gmp</requirement>
        <requirement type="package" version="0.22.1">isl</requirement>
        <requirement type="package" version="9.3.0">libgfortran-devel_osx-64</requirement>
        <requirement type="package" version="1.2.1">mpc</requirement>
        <requirement type="package" version="4.1.0">mpfr</requirement>
        <requirement type="package" version="2.7">gsl</requirement>
        <requirement type="package" version="4.3">make</requirement>
        <requirement type="package" version="1.48.10">pango</requirement>
        <requirement type="package" version="1">fonts-conda-ecosystem</requirement>
        <requirement type="package" version="1">fonts-conda-forge</requirement>
        <requirement type="package" version="2.37">font-ttf-dejavu-sans-mono</requirement>
        <requirement type="package" version="3.000">font-ttf-inconsolata</requirement>
        <requirement type="package" version="2.038">font-ttf-source-code-pro</requirement>
        <requirement type="package" version="0.83">font-ttf-ubuntu</requirement>
        <requirement type="package" version="1.0.10">fribidi</requirement>
        <requirement type="package" version="3.1.1">harfbuzz</requirement>
        <requirement type="package" version="1.3.13">graphite2</requirement>
        <requirement type="package" version="10.37">pcre2</requirement>
        <requirement type="package" version="2.10">tktable</requirement>
        <requirement type="package" version="2.62.0">bioconductor-biostrings</requirement>
        <requirement type="package" version="1.30.0">bioconductor-genomeinfodb</requirement>
        <requirement type="package" version="1.2.7">bioconductor-genomeinfodbdata</requirement>
        <requirement type="package" version="2.28.0">bioconductor-iranges</requirement>
        <requirement type="package" version="0.32.0">bioconductor-s4vectors</requirement>
        <requirement type="package" version="1.98_1.5">r-rcurl</requirement>
        <requirement type="package" version="1.0_7">r-bitops</requirement>
        <requirement type="package" version="0.34.0">bioconductor-xvector</requirement>
        <requirement type="package" version="1.40.0">bioconductor-zlibbioc</requirement>
        <requirement type="package" version="1.4.2">r-crayon</requirement>
        <requirement type="package" version="1.52.0">bioconductor-shortread</requirement>
        <requirement type="package" version="2.54.0">bioconductor-biobase</requirement>
        <requirement type="package" version="1.28.0">bioconductor-biocparallel</requirement>
        <requirement type="package" version="1.75.0_0">r-bh</requirement>
        <requirement type="package" version="1.4.3">r-futile.logger</requirement>
        <requirement type="package" version="1.0.1">r-futile.options</requirement>
        <requirement type="package" version="1.2.4">r-lambda.r</requirement>
        <requirement type="package" version="1.11">r-formatr</requirement>
        <requirement type="package" version="0.4_4">r-snow</requirement>
        <requirement type="package" version="1.30.0">bioconductor-genomicalignments</requirement>
        <requirement type="package" version="1.46.0">bioconductor-genomicranges</requirement>
        <requirement type="package" version="2.10.0">bioconductor-rsamtools</requirement>
        <requirement type="package" version="1.26.0">bioconductor-rhtslib</requirement>
        <requirement type="package" version="1.24.0">bioconductor-summarizedexperiment</requirement>
        <requirement type="package" version="0.20.0">bioconductor-delayedarray</requirement>
        <requirement type="package" version="1.6.0">bioconductor-matrixgenerics</requirement>
        <requirement type="package" version="0.61.0">r-matrixstats</requirement>
        <requirement type="package" version="1.3_4">r-matrix</requirement>
        <requirement type="package" version="0.20_45">r-lattice</requirement>
        <requirement type="package" version="1.3.2">r-hwriter</requirement>
        <requirement type="package" version="0.6_29">r-latticeextra</requirement>
        <requirement type="package" version="0.1_9">r-jpeg</requirement>
        <requirement type="package" version="0.1_7">r-png</requirement>
        <requirement type="package" version="1.1_2">r-rcolorbrewer</requirement>
        <requirement type="package" version="3.3.5">r-ggplot2</requirement>
        <requirement type="package" version="0.6.29">r-digest</requirement>
        <requirement type="package" version="1.5.1">r-glue</requirement>
        <requirement type="package" version="0.3.0">r-gtable</requirement>
        <requirement type="package" version="0.2.5">r-isoband</requirement>
        <requirement type="package" version="1.0.7">r-rcpp</requirement>
        <requirement type="package" version="3.1.0">r-testthat</requirement>
        <requirement type="package" version="1.1.3">r-brio</requirement>
        <requirement type="package" version="3.7.0">r-callr</requirement>
        <requirement type="package" version="3.5.2">r-processx</requirement>
        <requirement type="package" version="1.6.0">r-ps</requirement>
        <requirement type="package" version="2.5.1">r-r6</requirement>
        <requirement type="package" version="3.1.0">r-cli</requirement>
        <requirement type="package" version="1.4.0">r-desc</requirement>
        <requirement type="package" version="0.2.1">r-assertthat</requirement>
        <requirement type="package" version="2.0.2">r-rprojroot</requirement>
        <requirement type="package" version="1.4.0">r-backports</requirement>
        <requirement type="package" version="0.3.2">r-ellipsis</requirement>
        <requirement type="package" version="0.4.12">r-rlang</requirement>
        <requirement type="package" version="0.14">r-evaluate</requirement>
        <requirement type="package" version="1.7.2">r-jsonlite</requirement>
        <requirement type="package" version="1.0.1">r-lifecycle</requirement>
        <requirement type="package" version="2.0.1">r-magrittr</requirement>
        <requirement type="package" version="1.2.4">r-pkgload</requirement>
        <requirement type="package" version="0.13">r-rstudioapi</requirement>
        <requirement type="package" version="2.4.3">r-withr</requirement>
        <requirement type="package" version="1.0.0">r-praise</requirement>
        <requirement type="package" version="0.3.1">r-waldo</requirement>
        <requirement type="package" version="0.3.5">r-diffobj</requirement>
        <requirement type="package" version="0.5.0">r-fansi</requirement>
        <requirement type="package" version="2.1.2">r-rematch2</requirement>
        <requirement type="package" version="3.1.6">r-tibble</requirement>
        <requirement type="package" version="1.6.4">r-pillar</requirement>
        <requirement type="package" version="1.2.2">r-utf8</requirement>
        <requirement type="package" version="0.3.8">r-vctrs</requirement>
        <requirement type="package" version="2.0.3">r-pkgconfig</requirement>
        <requirement type="package" version="7.3_54">r-mass</requirement>
        <requirement type="package" version="1.8_38">r-mgcv</requirement>
        <requirement type="package" version="3.1_153">r-nlme</requirement>
        <requirement type="package" version="1.1.1">r-scales</requirement>
        <requirement type="package" version="2.1.0">r-farver</requirement>
        <requirement type="package" version="0.4.2">r-labeling</requirement>
        <requirement type="package" version="0.5.0">r-munsell</requirement>
        <requirement type="package" version="2.0_2">r-colorspace</requirement>
        <requirement type="package" version="0.4.0">r-viridislite</requirement>
        <requirement type="package" version="5.1.4">r-rcppparallel</requirement>
        <requirement type="package" version="1.4.4">r-reshape2</requirement>
        <requirement type="package" version="1.8.6">r-plyr</requirement>
        <requirement type="package" version="1.4.0">r-stringr</requirement>
        <requirement type="package" version="1.7.6">r-stringi</requirement>
        <requirement type="package" version="11.0.9.1">openjdk</requirement>
        <requirement type="package" version="2022.2.0.dev0">q2templates</requirement>
        <requirement type="package" version="3.0.3">jinja2</requirement>
        <requirement type="package" version="2.0.1">markupsafe</requirement>
        <requirement type="package" version="7.6.5">ipywidgets</requirement>
        <requirement type="package" version="6.5.1">ipykernel</requirement>
        <requirement type="package" version="1.5.1">debugpy</requirement>
        <requirement type="package" version="7.1.0">jupyter_client</requirement>
        <requirement type="package" version="0.3">entrypoints</requirement>
        <requirement type="package" version="4.9.1">jupyter_core</requirement>
        <requirement type="package" version="1.5.4">nest-asyncio</requirement>
        <requirement type="package" version="22.3.0">pyzmq</requirement>
        <requirement type="package" version="1.0.18">libsodium</requirement>
        <requirement type="package" version="4.3.4">zeromq</requirement>
        <requirement type="package" version="6.1">tornado</requirement>
        <requirement type="package" version="0.2.0">ipython_genutils</requirement>
        <requirement type="package" version="1.0.2">jupyterlab_widgets</requirement>
        <requirement type="package" version="5.1.3">nbformat</requirement>
        <requirement type="package" version="4.2.1">jsonschema</requirement>
        <requirement type="package" version="4.8.2">importlib-metadata</requirement>
        <requirement type="package" version="3.6.0">zipp</requirement>
        <requirement type="package" version="5.4.0">importlib_resources</requirement>
        <requirement type="package" version="0.18.0">pyrsistent</requirement>
        <requirement type="package" version="3.5.2">widgetsnbextension</requirement>
        <requirement type="package" version="6.4.6">notebook</requirement>
        <requirement type="package" version="21.1.0">argon2-cffi</requirement>
        <requirement type="package" version="6.3.0">nbconvert</requirement>
        <requirement type="package" version="4.1.0">bleach</requirement>
        <requirement type="package" version="0.5.1">webencodings</requirement>
        <requirement type="package" version="0.7.1">defusedxml</requirement>
        <requirement type="package" version="0.1.2">jupyterlab_pygments</requirement>
        <requirement type="package" version="0.8.4">mistune</requirement>
        <requirement type="package" version="0.5.9">nbclient</requirement>
        <requirement type="package" version="1.10">async_generator</requirement>
        <requirement type="package" version="2.16.2">pandoc</requirement>
        <requirement type="package" version="1.5.0">pandocfilters</requirement>
        <requirement type="package" version="0.5.0">testpath</requirement>
        <requirement type="package" version="0.12.0">prometheus_client</requirement>
        <requirement type="package" version="1.8.0">send2trash</requirement>
        <requirement type="package" version="0.12.1">terminado</requirement>
        <requirement type="package" version="0.11.2">seaborn</requirement>
        <requirement type="package" version="0.11.2">seaborn-base</requirement>
        <requirement type="package" version="0.13.1">statsmodels</requirement>
        <requirement type="package" version="0.5.2">patsy</requirement>
        <requirement type="package" version="2022.2.0.dev0+1.gb149232">q2-diversity-lib</requirement>
        <requirement type="package" version="2022.2.0.dev0">q2-emperor</requirement>
        <requirement type="package" version="1.0.3">emperor</requirement>
        <requirement type="package" version="2022.2.0.dev0+1.g81852b2">q2-feature-table</requirement>
        <requirement type="package" version="2022.2.0.dev0">q2-metadata</requirement>
        <requirement type="package" version="2.5_7">r-vegan</requirement>
        <requirement type="package" version="2.1.2">r-cluster</requirement>
        <requirement type="package" version="0.9_5">r-permute</requirement>
        <requirement type="package" version="0.5.2">umap-learn</requirement>
        <requirement type="package" version="0.53.1">numba</requirement>
        <requirement type="package" version="0.36.0">llvmlite</requirement>
        <requirement type="package" version="10.0.1">libllvm10</requirement>
        <requirement type="package" version="0.5.5">pynndescent</requirement>
        <requirement type="package" version="2020.2">tbb</requirement>
        <requirement type="package" version="4.62.3">tqdm</requirement>
        <requirement type="package" version="0.4.4">colorama</requirement>
        <requirement type="package" version="3.5">cutadapt</requirement>
        <requirement type="package" version="0.6.0">dnaio</requirement>
        <requirement type="package" version="1.2.1">xopen</requirement>
        <requirement type="package" version="2.30.0">isa-l</requirement>
        <requirement type="package" version="1.1.13">pbzip2</requirement>
        <requirement type="package" version="2.6">pigz</requirement>
        <requirement type="package" version="0.11.1">python-isal</requirement>
        <requirement type="package" version="2.7.0">vsearch</requirement>
        <requirement type="package" version="4.3.10">sepp</requirement>
        <requirement type="package" version="4.5.2">dendropy</requirement>
        <requirement type="package" version="3.1b2">hmmer</requirement>
        <requirement type="package" version="1.1.26">fastcluster</requirement>
        <requirement type="package" version="2.4.2">bokeh</requirement>
        <requirement type="package" version="4.0.1">typing_extensions</requirement>
        <requirement type="package" version="0.4.6">gneiss</requirement>
        <requirement type="package" version="3.5.0">matplotlib</requirement>
        <requirement type="package" version="1.3.7">nose</requirement>
        <requirement type="package" version="2.12.0">blast</requirement>
        <requirement type="package" version="16.2">entrez-direct</requirement>
        <requirement type="package" version="5.26.2">perl</requirement>
        <requirement type="package" version="2.18">perl-archive-tar</requirement>
        <requirement type="package" version="2.087">perl-io-compress</requirement>
        <requirement type="package" version="2.087">perl-compress-raw-bzip2</requirement>
        <requirement type="package" version="2.087">perl-compress-raw-zlib</requirement>
        <requirement type="package" version="1.52">perl-scalar-list-utils</requirement>
        <requirement type="package" version="1.10">perl-io-zlib</requirement>
        <requirement type="package" version="3.75">perl-pathtools</requirement>
        <requirement type="package" version="1.38">perl-carp</requirement>
        <requirement type="package" version="5.72">perl-exporter</requirement>
        <requirement type="package" version="7.36">perl-extutils-makemaker</requirement>
        <requirement type="package" version="4.02">perl-json</requirement>
        <requirement type="package" version="2.34">perl-json-xs</requirement>
        <requirement type="package" version="3.74">perl-common-sense</requirement>
        <requirement type="package" version="1.0">perl-types-serialiser</requirement>
        <requirement type="package" version="0.413">perl-list-moreutils</requirement>
        <requirement type="package" version="1.002001">perl-exporter-tiny</requirement>
        <requirement type="package" version="5.26.0">perl-threaded</requirement>
        <requirement type="package" version="2.4.2">bowtie2</requirement>
        <requirement type="package" version="2022.2.0.dev0+1.g8e9ad83">q2-taxa</requirement>
        <requirement type="package" version="1.14">samtools</requirement>
        <requirement type="package" version="1.14">htslib</requirement>
        <requirement type="package" version="1.1.0">deblur</requirement>
        <requirement type="package" version="7.490">mafft</requirement>
        <requirement type="package" version="2.0">sortmerna</requirement>
        <requirement type="package" version="2022.2.0.dev0">q2-sample-classifier</requirement>
        <requirement type="package" version="2.1.10">fasttree</requirement>
        <requirement type="package" version="4.8.5">libgcc</requirement>
        <requirement type="package" version="2.1.4_beta">iqtree</requirement>
        <requirement type="package" version="2022.2.0.dev0">q2-alignment</requirement>
        <requirement type="package" version="8.2.12">raxml</requirement>
        <requirement type="package" version="2022.2.0.dev0">q2-quality-control</requirement>
    </requirements>
    <command>q2galaxy run tools import '$inputs'</command>
    <configfiles>
        <configfile name="inputs">&lt;%
# This is an exercise in cheating the Cheetah
import json

def expand_collection(collection):
    # All of this work is just to extract the
    # element identifier AND the path
    return [dict(name=d.element_identifier, data=stringify(d))
            for d in collection]

def stringify(obj):
    if type(obj) is dict:
        new = {}
        for key, value in obj.items():
            if (key.startswith('__') and key.endswith('__')
                    and not key.startswith('__q2galaxy__')):
                continue
            new[str(key)] = stringify(value)

        return new
    elif type(obj) is list:
        return [stringify(x) for x in obj]
    elif type(obj.__str__) is not type(object().__str__):  # noqa
        # There is an associated __str__ which will be used for
        # "normal" templating, it looks like a strange check because
        # it really is, we're testing for method-wrapper as a sign
        # of non-implementation
        return str(obj)
    elif obj.is_collection:
        return expand_collection(obj)
    else:
        raise NotImplementedError("Unrecognized situation in q2galaxy")

dataset = self.getVar('import_root')
inputs = stringify(dataset)
write(json.dumps(inputs))
    %&gt;</configfile>
    </configfiles>
    <inputs>
        <conditional name="import_root">
            <param name="type" type="select" label="Type of data to import:">
                <option value="None">Select a QIIME 2 type to import.</option>
                <option value="Bowtie2Index">Bowtie2Index</option>
                <option value="DeblurStats">DeblurStats</option>
                <option value="DistanceMatrix">DistanceMatrix</option>
                <option value="EMPPairedEndSequences">EMPPairedEndSequences</option>
                <option value="EMPSingleEndSequences">EMPSingleEndSequences</option>
                <option value="ErrorCorrectionDetails">ErrorCorrectionDetails</option>
                <option value="FeatureData__ob__AlignedProteinSequence__cb__">FeatureData[AlignedProteinSequence]</option>
                <option value="FeatureData__ob__AlignedRNASequence__cb__">FeatureData[AlignedRNASequence]</option>
                <option value="FeatureData__ob__AlignedSequence__cb__">FeatureData[AlignedSequence]</option>
                <option value="FeatureData__ob__BLAST6__cb__">FeatureData[BLAST6]</option>
                <option value="FeatureData__ob__Differential__cb__">FeatureData[Differential]</option>
                <option value="FeatureData__ob__Importance__cb__">FeatureData[Importance]</option>
                <option value="FeatureData__ob__PairedEndRNASequence__cb__">FeatureData[PairedEndRNASequence]</option>
                <option value="FeatureData__ob__PairedEndSequence__cb__">FeatureData[PairedEndSequence]</option>
                <option value="FeatureData__ob__ProteinSequence__cb__">FeatureData[ProteinSequence]</option>
                <option value="FeatureData__ob__RNASequence__cb__">FeatureData[RNASequence]</option>
                <option value="FeatureData__ob__Sequence__cb__">FeatureData[Sequence]</option>
                <option value="FeatureData__ob__Taxonomy__cb__">FeatureData[Taxonomy]</option>
                <option value="FeatureTable__ob__Balance__cb__">FeatureTable[Balance]</option>
                <option value="FeatureTable__ob__Composition__cb__">FeatureTable[Composition]</option>
                <option value="FeatureTable__ob__Design__cb__">FeatureTable[Design]</option>
                <option value="FeatureTable__ob__Frequency__cb__">FeatureTable[Frequency]</option>
                <option value="FeatureTable__ob__PercentileNormalized__cb__">FeatureTable[PercentileNormalized]</option>
                <option value="FeatureTable__ob__PresenceAbsence__cb__">FeatureTable[PresenceAbsence]</option>
                <option value="FeatureTable__ob__RelativeFrequency__cb__">FeatureTable[RelativeFrequency]</option>
                <option value="Hierarchy">Hierarchy</option>
                <option value="MultiplexedPairedEndBarcodeInSequence">MultiplexedPairedEndBarcodeInSequence</option>
                <option value="MultiplexedSingleEndBarcodeInSequence">MultiplexedSingleEndBarcodeInSequence</option>
                <option value="PCoAResults">PCoAResults</option>
                <option value="Phylogeny__ob__Rooted__cb__">Phylogeny[Rooted]</option>
                <option value="Phylogeny__ob__Unrooted__cb__">Phylogeny[Unrooted]</option>
                <option value="Placements">Placements</option>
                <option value="ProcrustesStatistics">ProcrustesStatistics</option>
                <option value="QualityFilterStats">QualityFilterStats</option>
                <option value="RawSequences">RawSequences</option>
                <option value="SampleData__ob__AlphaDiversity__cb__">SampleData[AlphaDiversity]</option>
                <option value="SampleData__ob__BooleanSeries__cb__">SampleData[BooleanSeries]</option>
                <option value="SampleData__ob__ClassifierPredictions__cb__">SampleData[ClassifierPredictions]</option>
                <option value="SampleData__ob__DADA2Stats__cb__">SampleData[DADA2Stats]</option>
                <option value="SampleData__ob__FirstDifferences__cb__">SampleData[FirstDifferences]</option>
                <option value="SampleData__ob__JoinedSequencesWithQuality__cb__">SampleData[JoinedSequencesWithQuality]</option>
                <option value="SampleData__ob__PairedEndSequencesWithQuality__cb__">SampleData[PairedEndSequencesWithQuality]</option>
                <option value="SampleData__ob__Probabilities__cb__">SampleData[Probabilities]</option>
                <option value="SampleData__ob__RegressorPredictions__cb__">SampleData[RegressorPredictions]</option>
                <option value="SampleData__ob__SequencesWithQuality__cb__">SampleData[SequencesWithQuality]</option>
                <option value="SampleData__ob__Sequences__cb__">SampleData[Sequences]</option>
                <option value="SampleData__ob__TrueTargets__cb__">SampleData[TrueTargets]</option>
                <option value="SampleEstimator__ob__Classifier__cb__">SampleEstimator[Classifier]</option>
                <option value="SampleEstimator__ob__Regressor__cb__">SampleEstimator[Regressor]</option>
                <option value="SeppReferenceDatabase">SeppReferenceDatabase</option>
                <option value="TaxonomicClassifier">TaxonomicClassifier</option>
                <option value="UchimeStats">UchimeStats</option>
            </param>
            <when value="None"/>
            <when value="Bowtie2Index">
                <conditional name="__q2galaxy__GUI__cond__format__">
                    <param name="format" type="select" label="QIIME 2 file format to import from:">
                        <option value="Bowtie2IndexDirFmt" selected="true">Bowtie2 Index Directory Format</option>
                    </param>
                    <when value="Bowtie2IndexDirFmt">
                        <section name="import_idx1" expanded="true">
                            <param name="name" type="text" help="Filename to import the data as. Must match regex: .+(?‹!\.rev)\.1\.bt2l?">
                                <validator type="regex" message="This filename doesn't match the regex.">.+(?&lt;!\.rev)\.1\.bt2l?</validator>
                            </param>
                            <param name="data" type="data" help="This data should be formatted as a Bowtie2IndexFileFormat. See the documentation below for more information."/>
                        </section>
                        <section name="import_idx2" expanded="true">
                            <param name="name" type="text" help="Filename to import the data as. Must match regex: .+(?‹!\.rev)\.2\.bt2l?">
                                <validator type="regex" message="This filename doesn't match the regex.">.+(?&lt;!\.rev)\.2\.bt2l?</validator>
                            </param>
                            <param name="data" type="data" help="This data should be formatted as a Bowtie2IndexFileFormat. See the documentation below for more information."/>
                        </section>
                        <section name="import_ref3" expanded="true">
                            <param name="name" type="text" help="Filename to import the data as. Must match regex: .+\.3\.bt2l?">
                                <validator type="regex" message="This filename doesn't match the regex.">.+\.3\.bt2l?</validator>
                            </param>
                            <param name="data" type="data" help="This data should be formatted as a Bowtie2IndexFileFormat. See the documentation below for more information."/>
                        </section>
                        <section name="import_ref4" expanded="true">
                            <param name="name" type="text" help="Filename to import the data as. Must match regex: .+\.4\.bt2l?">
                                <validator type="regex" message="This filename doesn't match the regex.">.+\.4\.bt2l?</validator>
                            </param>
                            <param name="data" type="data" help="This data should be formatted as a Bowtie2IndexFileFormat. See the documentation below for more information."/>
                        </section>
                        <section name="import_rev1" expanded="true">
                            <param name="name" type="text" help="Filename to import the data as. Must match regex: .+\.rev\.1\.bt2l?">
                                <validator type="regex" message="This filename doesn't match the regex.">.+\.rev\.1\.bt2l?</validator>
                            </param>
                            <param name="data" type="data" help="This data should be formatted as a Bowtie2IndexFileFormat. See the documentation below for more information."/>
                        </section>
                        <section name="import_rev2" expanded="true">
                            <param name="name" type="text" help="Filename to import the data as. Must match regex: .+\.rev\.2\.bt2l?">
                                <validator type="regex" message="This filename doesn't match the regex.">.+\.rev\.2\.bt2l?</validator>
                            </param>
                            <param name="data" type="data" help="This data should be formatted as a Bowtie2IndexFileFormat. See the documentation below for more information."/>
                        </section>
                    </when>
                </conditional>
            </when>
            <when value="DeblurStats">
                <conditional name="__q2galaxy__GUI__cond__format__">
                    <param name="format" type="select" label="QIIME 2 file format to import from:">
                        <option value="DeblurStatsFmt" selected="true">Deblur Stats Format</option>
                    </param>
                    <when value="DeblurStatsFmt">
                        <section name="import" expanded="true">
                            <param name="name" type="hidden" value="__q2galaxy__::literal::None"/>
                            <param name="data" type="data" help="This data should be formatted as a DeblurStatsFmt. See the documentation below for more information."/>
                        </section>
                    </when>
                </conditional>
            </when>
            <when value="DistanceMatrix">
                <conditional name="__q2galaxy__GUI__cond__format__">
                    <param name="format" type="select" label="QIIME 2 file format to import from:">
                        <option value="LSMatFormat" selected="true">LS Mat Format</option>
                    </param>
                    <when value="LSMatFormat">
                        <section name="import" expanded="true">
                            <param name="name" type="hidden" value="__q2galaxy__::literal::None"/>
                            <param name="data" type="data" help="This data should be formatted as a LSMatFormat. See the documentation below for more information."/>
                        </section>
                    </when>
                </conditional>
            </when>
            <when value="EMPPairedEndSequences">
                <conditional name="__q2galaxy__GUI__cond__format__">
                    <param name="format" type="select" label="QIIME 2 file format to import from:">
                        <option value="EMPPairedEndCasavaDirFmt" selected="false">EMP Paired End Casava Directory Format</option>
                        <option value="EMPPairedEndDirFmt" selected="true">EMP Paired End Directory Format</option>
                    </param>
                    <when value="EMPPairedEndCasavaDirFmt">
                        <section name="import_forward" expanded="true">
                            <param name="name" type="text" value="Undetermined_S0_L001_R1_001.fastq.gz" help="Filename to import the data as. You shouldn't need to change this unless something is wrong."/>
                            <param name="data" type="data" help="This data should be formatted as a FastqGzFormat. See the documentation below for more information."/>
                        </section>
                        <section name="import_reverse" expanded="true">
                            <param name="name" type="text" value="Undetermined_S0_L001_R2_001.fastq.gz" help="Filename to import the data as. You shouldn't need to change this unless something is wrong."/>
                            <param name="data" type="data" help="This data should be formatted as a FastqGzFormat. See the documentation below for more information."/>
                        </section>
                        <section name="import_barcodes" expanded="true">
                            <param name="name" type="text" value="Undetermined_S0_L001_I1_001.fastq.gz" help="Filename to import the data as. You shouldn't need to change this unless something is wrong."/>
                            <param name="data" type="data" help="This data should be formatted as a FastqGzFormat. See the documentation below for more information."/>
                        </section>
                    </when>
                    <when value="EMPPairedEndDirFmt">
                        <section name="import_forward" expanded="true">
                            <param name="name" type="text" value="forward.fastq.gz" help="Filename to import the data as. You shouldn't need to change this unless something is wrong."/>
                            <param name="data" type="data" help="This data should be formatted as a FastqGzFormat. See the documentation below for more information."/>
                        </section>
                        <section name="import_reverse" expanded="true">
                            <param name="name" type="text" value="reverse.fastq.gz" help="Filename to import the data as. You shouldn't need to change this unless something is wrong."/>
                            <param name="data" type="data" help="This data should be formatted as a FastqGzFormat. See the documentation below for more information."/>
                        </section>
                        <section name="import_barcodes" expanded="true">
                            <param name="name" type="text" value="barcodes.fastq.gz" help="Filename to import the data as. You shouldn't need to change this unless something is wrong."/>
                            <param name="data" type="data" help="This data should be formatted as a FastqGzFormat. See the documentation below for more information."/>
                        </section>
                    </when>
                </conditional>
            </when>
            <when value="EMPSingleEndSequences">
                <conditional name="__q2galaxy__GUI__cond__format__">
                    <param name="format" type="select" label="QIIME 2 file format to import from:">
                        <option value="EMPSingleEndCasavaDirFmt" selected="false">EMP Single End Casava Directory Format</option>
                        <option value="EMPSingleEndDirFmt" selected="true">EMP Single End Directory Format</option>
                    </param>
                    <when value="EMPSingleEndCasavaDirFmt">
                        <section name="import_sequences" expanded="true">
                            <param name="name" type="text" value="Undetermined_S0_L001_R1_001.fastq.gz" help="Filename to import the data as. You shouldn't need to change this unless something is wrong."/>
                            <param name="data" type="data" help="This data should be formatted as a FastqGzFormat. See the documentation below for more information."/>
                        </section>
                        <section name="import_barcodes" expanded="true">
                            <param name="name" type="text" value="Undetermined_S0_L001_I1_001.fastq.gz" help="Filename to import the data as. You shouldn't need to change this unless something is wrong."/>
                            <param name="data" type="data" help="This data should be formatted as a FastqGzFormat. See the documentation below for more information."/>
                        </section>
                    </when>
                    <when value="EMPSingleEndDirFmt">
                        <section name="import_sequences" expanded="true">
                            <param name="name" type="text" value="sequences.fastq.gz" help="Filename to import the data as. You shouldn't need to change this unless something is wrong."/>
                            <param name="data" type="data" help="This data should be formatted as a FastqGzFormat. See the documentation below for more information."/>
                        </section>
                        <section name="import_barcodes" expanded="true">
                            <param name="name" type="text" value="barcodes.fastq.gz" help="Filename to import the data as. You shouldn't need to change this unless something is wrong."/>
                            <param name="data" type="data" help="This data should be formatted as a FastqGzFormat. See the documentation below for more information."/>
                        </section>
                    </when>
                </conditional>
            </when>
            <when value="ErrorCorrectionDetails">
                <conditional name="__q2galaxy__GUI__cond__format__">
                    <param name="format" type="select" label="QIIME 2 file format to import from:"/>
                </conditional>
            </when>
            <when value="FeatureData__ob__AlignedProteinSequence__cb__">
                <conditional name="__q2galaxy__GUI__cond__format__">
                    <param name="format" type="select" label="QIIME 2 file format to import from:">
                        <option value="AlignedProteinFASTAFormat" selected="true">Aligned Protein FASTA Format</option>
                    </param>
                    <when value="AlignedProteinFASTAFormat">
                        <section name="import" expanded="true">
                            <param name="name" type="hidden" value="__q2galaxy__::literal::None"/>
                            <param name="data" type="data" help="This data should be formatted as a AlignedProteinFASTAFormat. See the documentation below for more information."/>
                        </section>
                    </when>
                </conditional>
            </when>
            <when value="FeatureData__ob__AlignedRNASequence__cb__">
                <conditional name="__q2galaxy__GUI__cond__format__">
                    <param name="format" type="select" label="QIIME 2 file format to import from:">
                        <option value="AlignedRNAFASTAFormat" selected="true">Aligned RNAFASTA Format</option>
                    </param>
                    <when value="AlignedRNAFASTAFormat">
                        <section name="import" expanded="true">
                            <param name="name" type="hidden" value="__q2galaxy__::literal::None"/>
                            <param name="data" type="data" help="This data should be formatted as a AlignedRNAFASTAFormat. See the documentation below for more information."/>
                        </section>
                    </when>
                </conditional>
            </when>
            <when value="FeatureData__ob__AlignedSequence__cb__">
                <conditional name="__q2galaxy__GUI__cond__format__">
                    <param name="format" type="select" label="QIIME 2 file format to import from:">
                        <option value="AlignedDNAFASTAFormat" selected="true">Aligned DNAFASTA Format</option>
                    </param>
                    <when value="AlignedDNAFASTAFormat">
                        <section name="import" expanded="true">
                            <param name="name" type="hidden" value="__q2galaxy__::literal::None"/>
                            <param name="data" type="data" help="This data should be formatted as a AlignedDNAFASTAFormat. See the documentation below for more information."/>
                        </section>
                    </when>
                </conditional>
            </when>
            <when value="FeatureData__ob__BLAST6__cb__">
                <conditional name="__q2galaxy__GUI__cond__format__">
                    <param name="format" type="select" label="QIIME 2 file format to import from:">
                        <option value="BLAST6Format" selected="true">BLAST6 Format</option>
                    </param>
                    <when value="BLAST6Format">
                        <section name="import" expanded="true">
                            <param name="name" type="hidden" value="__q2galaxy__::literal::None"/>
                            <param name="data" type="data" help="This data should be formatted as a BLAST6Format. See the documentation below for more information."/>
                        </section>
                    </when>
                </conditional>
            </when>
            <when value="FeatureData__ob__Differential__cb__">
                <conditional name="__q2galaxy__GUI__cond__format__">
                    <param name="format" type="select" label="QIIME 2 file format to import from:">
                        <option value="DifferentialFormat" selected="true">Differential Format</option>
                    </param>
                    <when value="DifferentialFormat">
                        <section name="import" expanded="true">
                            <param name="name" type="hidden" value="__q2galaxy__::literal::None"/>
                            <param name="data" type="data" help="This data should be formatted as a DifferentialFormat. See the documentation below for more information."/>
                        </section>
                    </when>
                </conditional>
            </when>
            <when value="FeatureData__ob__Importance__cb__">
                <conditional name="__q2galaxy__GUI__cond__format__">
                    <param name="format" type="select" label="QIIME 2 file format to import from:">
                        <option value="ImportanceFormat" selected="true">Importance Format</option>
                    </param>
                    <when value="ImportanceFormat">
                        <section name="import" expanded="true">
                            <param name="name" type="hidden" value="__q2galaxy__::literal::None"/>
                            <param name="data" type="data" help="This data should be formatted as a ImportanceFormat. See the documentation below for more information."/>
                        </section>
                    </when>
                </conditional>
            </when>
            <when value="FeatureData__ob__PairedEndRNASequence__cb__">
                <conditional name="__q2galaxy__GUI__cond__format__">
                    <param name="format" type="select" label="QIIME 2 file format to import from:">
                        <option value="PairedRNASequencesDirectoryFormat" selected="true">Paired RNA Sequences Directory Format</option>
                    </param>
                    <when value="PairedRNASequencesDirectoryFormat">
                        <section name="import_left_rna_sequences" expanded="true">
                            <param name="name" type="text" value="left-rna-sequences.fasta" help="Filename to import the data as. You shouldn't need to change this unless something is wrong."/>
                            <param name="data" type="data" help="This data should be formatted as a RNAFASTAFormat. See the documentation below for more information."/>
                        </section>
                        <section name="import_right_rna_sequences" expanded="true">
                            <param name="name" type="text" value="right-rna-sequences.fasta" help="Filename to import the data as. You shouldn't need to change this unless something is wrong."/>
                            <param name="data" type="data" help="This data should be formatted as a RNAFASTAFormat. See the documentation below for more information."/>
                        </section>
                    </when>
                </conditional>
            </when>
            <when value="FeatureData__ob__PairedEndSequence__cb__">
                <conditional name="__q2galaxy__GUI__cond__format__">
                    <param name="format" type="select" label="QIIME 2 file format to import from:">
                        <option value="PairedDNASequencesDirectoryFormat" selected="true">Paired DNA Sequences Directory Format</option>
                    </param>
                    <when value="PairedDNASequencesDirectoryFormat">
                        <section name="import_left_dna_sequences" expanded="true">
                            <param name="name" type="text" value="left-dna-sequences.fasta" help="Filename to import the data as. You shouldn't need to change this unless something is wrong."/>
                            <param name="data" type="data" help="This data should be formatted as a DNAFASTAFormat. See the documentation below for more information."/>
                        </section>
                        <section name="import_right_dna_sequences" expanded="true">
                            <param name="name" type="text" value="right-dna-sequences.fasta" help="Filename to import the data as. You shouldn't need to change this unless something is wrong."/>
                            <param name="data" type="data" help="This data should be formatted as a DNAFASTAFormat. See the documentation below for more information."/>
                        </section>
                    </when>
                </conditional>
            </when>
            <when value="FeatureData__ob__ProteinSequence__cb__">
                <conditional name="__q2galaxy__GUI__cond__format__">
                    <param name="format" type="select" label="QIIME 2 file format to import from:">
                        <option value="ProteinFASTAFormat" selected="true">Protein FASTA Format</option>
                    </param>
                    <when value="ProteinFASTAFormat">
                        <section name="import" expanded="true">
                            <param name="name" type="hidden" value="__q2galaxy__::literal::None"/>
                            <param name="data" type="data" help="This data should be formatted as a ProteinFASTAFormat. See the documentation below for more information."/>
                        </section>
                    </when>
                </conditional>
            </when>
            <when value="FeatureData__ob__RNASequence__cb__">
                <conditional name="__q2galaxy__GUI__cond__format__">
                    <param name="format" type="select" label="QIIME 2 file format to import from:">
                        <option value="RNAFASTAFormat" selected="true">RNAFASTA Format</option>
                    </param>
                    <when value="RNAFASTAFormat">
                        <section name="import" expanded="true">
                            <param name="name" type="hidden" value="__q2galaxy__::literal::None"/>
                            <param name="data" type="data" help="This data should be formatted as a RNAFASTAFormat. See the documentation below for more information."/>
                        </section>
                    </when>
                </conditional>
            </when>
            <when value="FeatureData__ob__Sequence__cb__">
                <conditional name="__q2galaxy__GUI__cond__format__">
                    <param name="format" type="select" label="QIIME 2 file format to import from:">
                        <option value="DNAFASTAFormat" selected="true">DNAFASTA Format</option>
                    </param>
                    <when value="DNAFASTAFormat">
                        <section name="import" expanded="true">
                            <param name="name" type="hidden" value="__q2galaxy__::literal::None"/>
                            <param name="data" type="data" help="This data should be formatted as a DNAFASTAFormat. See the documentation below for more information."/>
                        </section>
                    </when>
                </conditional>
            </when>
            <when value="FeatureData__ob__Taxonomy__cb__">
                <conditional name="__q2galaxy__GUI__cond__format__">
                    <param name="format" type="select" label="QIIME 2 file format to import from:">
                        <option value="BIOMV210Format" selected="false">BIOMV210 Format</option>
                        <option value="HeaderlessTSVTaxonomyFormat" selected="false">Headerless TSV Taxonomy Format</option>
                        <option value="TSVTaxonomyFormat" selected="true">TSV Taxonomy Format</option>
                    </param>
                    <when value="BIOMV210Format">
                        <section name="import" expanded="true">
                            <param name="name" type="hidden" value="__q2galaxy__::literal::None"/>
                            <param name="data" type="data" help="This data should be formatted as a BIOMV210Format. See the documentation below for more information."/>
                        </section>
                    </when>
                    <when value="HeaderlessTSVTaxonomyFormat">
                        <section name="import" expanded="true">
                            <param name="name" type="hidden" value="__q2galaxy__::literal::None"/>
                            <param name="data" type="data" help="This data should be formatted as a HeaderlessTSVTaxonomyFormat. See the documentation below for more information."/>
                        </section>
                    </when>
                    <when value="TSVTaxonomyFormat">
                        <section name="import" expanded="true">
                            <param name="name" type="hidden" value="__q2galaxy__::literal::None"/>
                            <param name="data" type="data" help="This data should be formatted as a TSVTaxonomyFormat. See the documentation below for more information."/>
                        </section>
                    </when>
                </conditional>
            </when>
            <when value="FeatureTable__ob__Balance__cb__">
                <conditional name="__q2galaxy__GUI__cond__format__">
                    <param name="format" type="select" label="QIIME 2 file format to import from:">
                        <option value="BIOMV100Format" selected="false">BIOMV100 Format</option>
                        <option value="BIOMV210Format" selected="true">BIOMV210 Format</option>
                    </param>
                    <when value="BIOMV100Format">
                        <section name="import" expanded="true">
                            <param name="name" type="hidden" value="__q2galaxy__::literal::None"/>
                            <param name="data" type="data" help="This data should be formatted as a BIOMV100Format. See the documentation below for more information."/>
                        </section>
                    </when>
                    <when value="BIOMV210Format">
                        <section name="import" expanded="true">
                            <param name="name" type="hidden" value="__q2galaxy__::literal::None"/>
                            <param name="data" type="data" help="This data should be formatted as a BIOMV210Format. See the documentation below for more information."/>
                        </section>
                    </when>
                </conditional>
            </when>
            <when value="FeatureTable__ob__Composition__cb__">
                <conditional name="__q2galaxy__GUI__cond__format__">
                    <param name="format" type="select" label="QIIME 2 file format to import from:">
                        <option value="BIOMV100Format" selected="false">BIOMV100 Format</option>
                        <option value="BIOMV210Format" selected="true">BIOMV210 Format</option>
                    </param>
                    <when value="BIOMV100Format">
                        <section name="import" expanded="true">
                            <param name="name" type="hidden" value="__q2galaxy__::literal::None"/>
                            <param name="data" type="data" help="This data should be formatted as a BIOMV100Format. See the documentation below for more information."/>
                        </section>
                    </when>
                    <when value="BIOMV210Format">
                        <section name="import" expanded="true">
                            <param name="name" type="hidden" value="__q2galaxy__::literal::None"/>
                            <param name="data" type="data" help="This data should be formatted as a BIOMV210Format. See the documentation below for more information."/>
                        </section>
                    </when>
                </conditional>
            </when>
            <when value="FeatureTable__ob__Design__cb__">
                <conditional name="__q2galaxy__GUI__cond__format__">
                    <param name="format" type="select" label="QIIME 2 file format to import from:">
                        <option value="BIOMV100Format" selected="false">BIOMV100 Format</option>
                        <option value="BIOMV210Format" selected="true">BIOMV210 Format</option>
                    </param>
                    <when value="BIOMV100Format">
                        <section name="import" expanded="true">
                            <param name="name" type="hidden" value="__q2galaxy__::literal::None"/>
                            <param name="data" type="data" help="This data should be formatted as a BIOMV100Format. See the documentation below for more information."/>
                        </section>
                    </when>
                    <when value="BIOMV210Format">
                        <section name="import" expanded="true">
                            <param name="name" type="hidden" value="__q2galaxy__::literal::None"/>
                            <param name="data" type="data" help="This data should be formatted as a BIOMV210Format. See the documentation below for more information."/>
                        </section>
                    </when>
                </conditional>
            </when>
            <when value="FeatureTable__ob__Frequency__cb__">
                <conditional name="__q2galaxy__GUI__cond__format__">
                    <param name="format" type="select" label="QIIME 2 file format to import from:">
                        <option value="BIOMV100Format" selected="false">BIOMV100 Format</option>
                        <option value="BIOMV210Format" selected="true">BIOMV210 Format</option>
                    </param>
                    <when value="BIOMV100Format">
                        <section name="import" expanded="true">
                            <param name="name" type="hidden" value="__q2galaxy__::literal::None"/>
                            <param name="data" type="data" help="This data should be formatted as a BIOMV100Format. See the documentation below for more information."/>
                        </section>
                    </when>
                    <when value="BIOMV210Format">
                        <section name="import" expanded="true">
                            <param name="name" type="hidden" value="__q2galaxy__::literal::None"/>
                            <param name="data" type="data" help="This data should be formatted as a BIOMV210Format. See the documentation below for more information."/>
                        </section>
                    </when>
                </conditional>
            </when>
            <when value="FeatureTable__ob__PercentileNormalized__cb__">
                <conditional name="__q2galaxy__GUI__cond__format__">
                    <param name="format" type="select" label="QIIME 2 file format to import from:">
                        <option value="BIOMV100Format" selected="false">BIOMV100 Format</option>
                        <option value="BIOMV210Format" selected="true">BIOMV210 Format</option>
                    </param>
                    <when value="BIOMV100Format">
                        <section name="import" expanded="true">
                            <param name="name" type="hidden" value="__q2galaxy__::literal::None"/>
                            <param name="data" type="data" help="This data should be formatted as a BIOMV100Format. See the documentation below for more information."/>
                        </section>
                    </when>
                    <when value="BIOMV210Format">
                        <section name="import" expanded="true">
                            <param name="name" type="hidden" value="__q2galaxy__::literal::None"/>
                            <param name="data" type="data" help="This data should be formatted as a BIOMV210Format. See the documentation below for more information."/>
                        </section>
                    </when>
                </conditional>
            </when>
            <when value="FeatureTable__ob__PresenceAbsence__cb__">
                <conditional name="__q2galaxy__GUI__cond__format__">
                    <param name="format" type="select" label="QIIME 2 file format to import from:">
                        <option value="BIOMV100Format" selected="false">BIOMV100 Format</option>
                        <option value="BIOMV210Format" selected="true">BIOMV210 Format</option>
                    </param>
                    <when value="BIOMV100Format">
                        <section name="import" expanded="true">
                            <param name="name" type="hidden" value="__q2galaxy__::literal::None"/>
                            <param name="data" type="data" help="This data should be formatted as a BIOMV100Format. See the documentation below for more information."/>
                        </section>
                    </when>
                    <when value="BIOMV210Format">
                        <section name="import" expanded="true">
                            <param name="name" type="hidden" value="__q2galaxy__::literal::None"/>
                            <param name="data" type="data" help="This data should be formatted as a BIOMV210Format. See the documentation below for more information."/>
                        </section>
                    </when>
                </conditional>
            </when>
            <when value="FeatureTable__ob__RelativeFrequency__cb__">
                <conditional name="__q2galaxy__GUI__cond__format__">
                    <param name="format" type="select" label="QIIME 2 file format to import from:">
                        <option value="BIOMV100Format" selected="false">BIOMV100 Format</option>
                        <option value="BIOMV210Format" selected="true">BIOMV210 Format</option>
                    </param>
                    <when value="BIOMV100Format">
                        <section name="import" expanded="true">
                            <param name="name" type="hidden" value="__q2galaxy__::literal::None"/>
                            <param name="data" type="data" help="This data should be formatted as a BIOMV100Format. See the documentation below for more information."/>
                        </section>
                    </when>
                    <when value="BIOMV210Format">
                        <section name="import" expanded="true">
                            <param name="name" type="hidden" value="__q2galaxy__::literal::None"/>
                            <param name="data" type="data" help="This data should be formatted as a BIOMV210Format. See the documentation below for more information."/>
                        </section>
                    </when>
                </conditional>
            </when>
            <when value="Hierarchy">
                <conditional name="__q2galaxy__GUI__cond__format__">
                    <param name="format" type="select" label="QIIME 2 file format to import from:">
                        <option value="NewickFormat" selected="true">Newick Format</option>
                    </param>
                    <when value="NewickFormat">
                        <section name="import" expanded="true">
                            <param name="name" type="hidden" value="__q2galaxy__::literal::None"/>
                            <param name="data" type="data" help="This data should be formatted as a NewickFormat. See the documentation below for more information."/>
                        </section>
                    </when>
                </conditional>
            </when>
            <when value="MultiplexedPairedEndBarcodeInSequence">
                <conditional name="__q2galaxy__GUI__cond__format__">
                    <param name="format" type="select" label="QIIME 2 file format to import from:">
                        <option value="MultiplexedPairedEndBarcodeInSequenceDirFmt" selected="true">Multiplexed Paired End Barcode In Sequence Directory Format</option>
                    </param>
                    <when value="MultiplexedPairedEndBarcodeInSequenceDirFmt">
                        <section name="import_forward_sequences" expanded="true">
                            <param name="name" type="text" value="forward.fastq.gz" help="Filename to import the data as. You shouldn't need to change this unless something is wrong."/>
                            <param name="data" type="data" help="This data should be formatted as a FastqGzFormat. See the documentation below for more information."/>
                        </section>
                        <section name="import_reverse_sequences" expanded="true">
                            <param name="name" type="text" value="reverse.fastq.gz" help="Filename to import the data as. You shouldn't need to change this unless something is wrong."/>
                            <param name="data" type="data" help="This data should be formatted as a FastqGzFormat. See the documentation below for more information."/>
                        </section>
                    </when>
                </conditional>
            </when>
            <when value="MultiplexedSingleEndBarcodeInSequence">
                <conditional name="__q2galaxy__GUI__cond__format__">
                    <param name="format" type="select" label="QIIME 2 file format to import from:">
                        <option value="FastqGzFormat" selected="true">Fastq Gz Format</option>
                    </param>
                    <when value="FastqGzFormat">
                        <section name="import" expanded="true">
                            <param name="name" type="hidden" value="__q2galaxy__::literal::None"/>
                            <param name="data" type="data" help="This data should be formatted as a FastqGzFormat. See the documentation below for more information."/>
                        </section>
                    </when>
                </conditional>
            </when>
            <when value="PCoAResults">
                <conditional name="__q2galaxy__GUI__cond__format__">
                    <param name="format" type="select" label="QIIME 2 file format to import from:">
                        <option value="OrdinationFormat" selected="true">Ordination Format</option>
                    </param>
                    <when value="OrdinationFormat">
                        <section name="import" expanded="true">
                            <param name="name" type="hidden" value="__q2galaxy__::literal::None"/>
                            <param name="data" type="data" help="This data should be formatted as a OrdinationFormat. See the documentation below for more information."/>
                        </section>
                    </when>
                </conditional>
            </when>
            <when value="Phylogeny__ob__Rooted__cb__">
                <conditional name="__q2galaxy__GUI__cond__format__">
                    <param name="format" type="select" label="QIIME 2 file format to import from:">
                        <option value="NewickFormat" selected="true">Newick Format</option>
                    </param>
                    <when value="NewickFormat">
                        <section name="import" expanded="true">
                            <param name="name" type="hidden" value="__q2galaxy__::literal::None"/>
                            <param name="data" type="data" help="This data should be formatted as a NewickFormat. See the documentation below for more information."/>
                        </section>
                    </when>
                </conditional>
            </when>
            <when value="Phylogeny__ob__Unrooted__cb__">
                <conditional name="__q2galaxy__GUI__cond__format__">
                    <param name="format" type="select" label="QIIME 2 file format to import from:">
                        <option value="NewickFormat" selected="true">Newick Format</option>
                    </param>
                    <when value="NewickFormat">
                        <section name="import" expanded="true">
                            <param name="name" type="hidden" value="__q2galaxy__::literal::None"/>
                            <param name="data" type="data" help="This data should be formatted as a NewickFormat. See the documentation below for more information."/>
                        </section>
                    </when>
                </conditional>
            </when>
            <when value="Placements">
                <conditional name="__q2galaxy__GUI__cond__format__">
                    <param name="format" type="select" label="QIIME 2 file format to import from:">
                        <option value="PlacementsFormat" selected="true">Placements Format</option>
                    </param>
                    <when value="PlacementsFormat">
                        <section name="import" expanded="true">
                            <param name="name" type="hidden" value="__q2galaxy__::literal::None"/>
                            <param name="data" type="data" help="This data should be formatted as a PlacementsFormat. See the documentation below for more information."/>
                        </section>
                    </when>
                </conditional>
            </when>
            <when value="ProcrustesStatistics">
                <conditional name="__q2galaxy__GUI__cond__format__">
                    <param name="format" type="select" label="QIIME 2 file format to import from:">
                        <option value="ProcrustesStatisticsFmt" selected="true">Procrustes Statistics Format</option>
                    </param>
                    <when value="ProcrustesStatisticsFmt">
                        <section name="import" expanded="true">
                            <param name="name" type="hidden" value="__q2galaxy__::literal::None"/>
                            <param name="data" type="data" help="This data should be formatted as a ProcrustesStatisticsFmt. See the documentation below for more information."/>
                        </section>
                    </when>
                </conditional>
            </when>
            <when value="QualityFilterStats">
                <conditional name="__q2galaxy__GUI__cond__format__">
                    <param name="format" type="select" label="QIIME 2 file format to import from:">
                        <option value="QualityFilterStatsFmt" selected="true">Quality Filter Stats Format</option>
                    </param>
                    <when value="QualityFilterStatsFmt">
                        <section name="import" expanded="true">
                            <param name="name" type="hidden" value="__q2galaxy__::literal::None"/>
                            <param name="data" type="data" help="This data should be formatted as a QualityFilterStatsFmt. See the documentation below for more information."/>
                        </section>
                    </when>
                </conditional>
            </when>
            <when value="RawSequences">
                <conditional name="__q2galaxy__GUI__cond__format__">
                    <param name="format" type="select" label="QIIME 2 file format to import from:">
                        <option value="EMPSingleEndCasavaDirFmt" selected="false">EMP Single End Casava Directory Format</option>
                        <option value="EMPSingleEndDirFmt" selected="true">EMP Single End Directory Format</option>
                    </param>
                    <when value="EMPSingleEndCasavaDirFmt">
                        <section name="import_sequences" expanded="true">
                            <param name="name" type="text" value="Undetermined_S0_L001_R1_001.fastq.gz" help="Filename to import the data as. You shouldn't need to change this unless something is wrong."/>
                            <param name="data" type="data" help="This data should be formatted as a FastqGzFormat. See the documentation below for more information."/>
                        </section>
                        <section name="import_barcodes" expanded="true">
                            <param name="name" type="text" value="Undetermined_S0_L001_I1_001.fastq.gz" help="Filename to import the data as. You shouldn't need to change this unless something is wrong."/>
                            <param name="data" type="data" help="This data should be formatted as a FastqGzFormat. See the documentation below for more information."/>
                        </section>
                    </when>
                    <when value="EMPSingleEndDirFmt">
                        <section name="import_sequences" expanded="true">
                            <param name="name" type="text" value="sequences.fastq.gz" help="Filename to import the data as. You shouldn't need to change this unless something is wrong."/>
                            <param name="data" type="data" help="This data should be formatted as a FastqGzFormat. See the documentation below for more information."/>
                        </section>
                        <section name="import_barcodes" expanded="true">
                            <param name="name" type="text" value="barcodes.fastq.gz" help="Filename to import the data as. You shouldn't need to change this unless something is wrong."/>
                            <param name="data" type="data" help="This data should be formatted as a FastqGzFormat. See the documentation below for more information."/>
                        </section>
                    </when>
                </conditional>
            </when>
            <when value="SampleData__ob__AlphaDiversity__cb__">
                <conditional name="__q2galaxy__GUI__cond__format__">
                    <param name="format" type="select" label="QIIME 2 file format to import from:">
                        <option value="AlphaDiversityFormat" selected="true">Alpha Diversity Format</option>
                    </param>
                    <when value="AlphaDiversityFormat">
                        <section name="import" expanded="true">
                            <param name="name" type="hidden" value="__q2galaxy__::literal::None"/>
                            <param name="data" type="data" help="This data should be formatted as a AlphaDiversityFormat. See the documentation below for more information."/>
                        </section>
                    </when>
                </conditional>
            </when>
            <when value="SampleData__ob__BooleanSeries__cb__">
                <conditional name="__q2galaxy__GUI__cond__format__">
                    <param name="format" type="select" label="QIIME 2 file format to import from:">
                        <option value="BooleanSeriesFormat" selected="true">Boolean Series Format</option>
                    </param>
                    <when value="BooleanSeriesFormat">
                        <section name="import" expanded="true">
                            <param name="name" type="hidden" value="__q2galaxy__::literal::None"/>
                            <param name="data" type="data" help="This data should be formatted as a BooleanSeriesFormat. See the documentation below for more information."/>
                        </section>
                    </when>
                </conditional>
            </when>
            <when value="SampleData__ob__ClassifierPredictions__cb__">
                <conditional name="__q2galaxy__GUI__cond__format__">
                    <param name="format" type="select" label="QIIME 2 file format to import from:">
                        <option value="PredictionsFormat" selected="true">Predictions Format</option>
                    </param>
                    <when value="PredictionsFormat">
                        <section name="import" expanded="true">
                            <param name="name" type="hidden" value="__q2galaxy__::literal::None"/>
                            <param name="data" type="data" help="This data should be formatted as a PredictionsFormat. See the documentation below for more information."/>
                        </section>
                    </when>
                </conditional>
            </when>
            <when value="SampleData__ob__DADA2Stats__cb__">
                <conditional name="__q2galaxy__GUI__cond__format__">
                    <param name="format" type="select" label="QIIME 2 file format to import from:">
                        <option value="DADA2StatsFormat" selected="true">DADA2 Stats Format</option>
                    </param>
                    <when value="DADA2StatsFormat">
                        <section name="import" expanded="true">
                            <param name="name" type="hidden" value="__q2galaxy__::literal::None"/>
                            <param name="data" type="data" help="This data should be formatted as a DADA2StatsFormat. See the documentation below for more information."/>
                        </section>
                    </when>
                </conditional>
            </when>
            <when value="SampleData__ob__FirstDifferences__cb__">
                <conditional name="__q2galaxy__GUI__cond__format__">
                    <param name="format" type="select" label="QIIME 2 file format to import from:">
                        <option value="FirstDifferencesFormat" selected="true">First Differences Format</option>
                    </param>
                    <when value="FirstDifferencesFormat">
                        <section name="import" expanded="true">
                            <param name="name" type="hidden" value="__q2galaxy__::literal::None"/>
                            <param name="data" type="data" help="This data should be formatted as a FirstDifferencesFormat. See the documentation below for more information."/>
                        </section>
                    </when>
                </conditional>
            </when>
            <when value="SampleData__ob__JoinedSequencesWithQuality__cb__">
                <conditional name="__q2galaxy__GUI__cond__format__">
                    <param name="format" type="select" label="QIIME 2 file format to import from:">
                        <option value="CasavaOneEightLanelessPerSampleDirFmt" selected="false">Casava One Eight Laneless Per Sample Directory Format</option>
                        <option value="CasavaOneEightSingleLanePerSampleDirFmt" selected="false">Casava One Eight Single Lane Per Sample Directory Format</option>
                        <option value="SingleEndFastqManifestPhred33" selected="false">Single End Fastq Manifest Phred33</option>
                        <option value="SingleEndFastqManifestPhred33V2" selected="false">Single End Fastq Manifest Phred33V2</option>
                        <option value="SingleEndFastqManifestPhred64" selected="false">Single End Fastq Manifest Phred64</option>
                        <option value="SingleEndFastqManifestPhred64V2" selected="false">Single End Fastq Manifest Phred64V2</option>
                        <option value="SingleLanePerSamplePairedEndFastqDirFmt" selected="false">Single Lane Per Sample Paired End Fastq Directory Format</option>
                        <option value="SingleLanePerSampleSingleEndFastqDirFmt" selected="true">Single Lane Per Sample Single End Fastq Directory Format</option>
                    </param>
                    <when value="CasavaOneEightLanelessPerSampleDirFmt">
                        <section name="import_sequences" expanded="true">
                            <conditional name="__q2galaxy__GUI__cond__sequences__">
                                <param name="__q2galaxy__GUI__select__picker__" type="select" label="Select a mechanism">
                                    <option value="collection" selected="true">Use collection to import</option>
                                    <option value="individual">Associate individual files</option>
                                </param>
                                <when value="collection">
                                    <param name="elements" type="data_collection" help="This data should be formatted as a FastqGzFormat. See the documentation below for more information. Elements must match regex: .+_.+_R[12]_001\.fastq\.gz"/>
                                    <conditional name="__q2galaxy__GUI__cond__add_ext__">
                                        <param name="__q2galaxy__GUI__select__ext_pick__" type="select" label="Append an extension?" help="This is needed if your element identifiers lack one.">
                                            <option value="no">No, use element identifiers as is</option>
                                            <option value="yes">Yes, append an extension</option>
                                        </param>
                                        <when value="yes">
                                            <param name="ext" type="text" label="Extension to append (e.g. '.fastq.gz')"/>
                                        </when>
                                        <when value="no"/>
                                    </conditional>
                                </when>
                                <when value="individual">
                                    <repeat name="elements" min="1">
                                        <param name="name" type="text" help="Filename to import the data as. Must match regex: .+_.+_R[12]_001\.fastq\.gz">
                                            <validator type="regex" message="This filename doesn't match the regex.">.+_.+_R[12]_001\.fastq\.gz</validator>
                                        </param>
                                        <param name="data" type="data" help="This data should be formatted as a FastqGzFormat. See the documentation below for more information."/>
                                    </repeat>
                                </when>
                            </conditional>
                        </section>
                    </when>
                    <when value="CasavaOneEightSingleLanePerSampleDirFmt">
                        <section name="import_sequences" expanded="true">
                            <conditional name="__q2galaxy__GUI__cond__sequences__">
                                <param name="__q2galaxy__GUI__select__picker__" type="select" label="Select a mechanism">
                                    <option value="collection" selected="true">Use collection to import</option>
                                    <option value="individual">Associate individual files</option>
                                </param>
                                <when value="collection">
                                    <param name="elements" type="data_collection" help="This data should be formatted as a FastqGzFormat. See the documentation below for more information. Elements must match regex: .+_.+_L[0-9][0-9][0-9]_R[12]_001\.fastq\.gz"/>
                                    <conditional name="__q2galaxy__GUI__cond__add_ext__">
                                        <param name="__q2galaxy__GUI__select__ext_pick__" type="select" label="Append an extension?" help="This is needed if your element identifiers lack one.">
                                            <option value="no">No, use element identifiers as is</option>
                                            <option value="yes">Yes, append an extension</option>
                                        </param>
                                        <when value="yes">
                                            <param name="ext" type="text" label="Extension to append (e.g. '.fastq.gz')"/>
                                        </when>
                                        <when value="no"/>
                                    </conditional>
                                </when>
                                <when value="individual">
                                    <repeat name="elements" min="1">
                                        <param name="name" type="text" help="Filename to import the data as. Must match regex: .+_.+_L[0-9][0-9][0-9]_R[12]_001\.fastq\.gz">
                                            <validator type="regex" message="This filename doesn't match the regex.">.+_.+_L[0-9][0-9][0-9]_R[12]_001\.fastq\.gz</validator>
                                        </param>
                                        <param name="data" type="data" help="This data should be formatted as a FastqGzFormat. See the documentation below for more information."/>
                                    </repeat>
                                </when>
                            </conditional>
                        </section>
                    </when>
                    <when value="SingleEndFastqManifestPhred33">
                        <section name="import" expanded="true">
                            <param name="name" type="hidden" value="__q2galaxy__::literal::None"/>
                            <param name="data" type="data" help="This data should be formatted as a SingleEndFastqManifestPhred33. See the documentation below for more information."/>
                        </section>
                    </when>
                    <when value="SingleEndFastqManifestPhred33V2">
                        <section name="import" expanded="true">
                            <param name="name" type="hidden" value="__q2galaxy__::literal::None"/>
                            <param name="data" type="data" help="This data should be formatted as a SingleEndFastqManifestPhred33V2. See the documentation below for more information."/>
                        </section>
                    </when>
                    <when value="SingleEndFastqManifestPhred64">
                        <section name="import" expanded="true">
                            <param name="name" type="hidden" value="__q2galaxy__::literal::None"/>
                            <param name="data" type="data" help="This data should be formatted as a SingleEndFastqManifestPhred64. See the documentation below for more information."/>
                        </section>
                    </when>
                    <when value="SingleEndFastqManifestPhred64V2">
                        <section name="import" expanded="true">
                            <param name="name" type="hidden" value="__q2galaxy__::literal::None"/>
                            <param name="data" type="data" help="This data should be formatted as a SingleEndFastqManifestPhred64V2. See the documentation below for more information."/>
                        </section>
                    </when>
                    <when value="SingleLanePerSamplePairedEndFastqDirFmt">
                        <section name="import_sequences" expanded="true">
                            <conditional name="__q2galaxy__GUI__cond__sequences__">
                                <param name="__q2galaxy__GUI__select__picker__" type="select" label="Select a mechanism">
                                    <option value="collection" selected="true">Use collection to import</option>
                                    <option value="individual">Associate individual files</option>
                                </param>
                                <when value="collection">
                                    <param name="elements" type="data_collection" help="This data should be formatted as a FastqGzFormat. See the documentation below for more information. Elements must match regex: .+_.+_L[0-9][0-9][0-9]_R[12]_001\.fastq\.gz"/>
                                    <conditional name="__q2galaxy__GUI__cond__add_ext__">
                                        <param name="__q2galaxy__GUI__select__ext_pick__" type="select" label="Append an extension?" help="This is needed if your element identifiers lack one.">
                                            <option value="no">No, use element identifiers as is</option>
                                            <option value="yes">Yes, append an extension</option>
                                        </param>
                                        <when value="yes">
                                            <param name="ext" type="text" label="Extension to append (e.g. '.fastq.gz')"/>
                                        </when>
                                        <when value="no"/>
                                    </conditional>
                                </when>
                                <when value="individual">
                                    <repeat name="elements" min="1">
                                        <param name="name" type="text" help="Filename to import the data as. Must match regex: .+_.+_L[0-9][0-9][0-9]_R[12]_001\.fastq\.gz">
                                            <validator type="regex" message="This filename doesn't match the regex.">.+_.+_L[0-9][0-9][0-9]_R[12]_001\.fastq\.gz</validator>
                                        </param>
                                        <param name="data" type="data" help="This data should be formatted as a FastqGzFormat. See the documentation below for more information."/>
                                    </repeat>
                                </when>
                            </conditional>
                        </section>
                        <section name="import_manifest" expanded="true">
                            <param name="name" type="text" value="MANIFEST" help="Filename to import the data as. You shouldn't need to change this unless something is wrong."/>
                            <param name="data" type="data" help="This data should be formatted as a FastqManifestFormat. See the documentation below for more information."/>
                        </section>
                        <section name="import_metadata" expanded="true">
                            <param name="name" type="text" value="metadata.yml" help="Filename to import the data as. You shouldn't need to change this unless something is wrong."/>
                            <param name="data" type="data" help="This data should be formatted as a YamlFormat. See the documentation below for more information."/>
                        </section>
                    </when>
                    <when value="SingleLanePerSampleSingleEndFastqDirFmt">
                        <section name="import_sequences" expanded="true">
                            <conditional name="__q2galaxy__GUI__cond__sequences__">
                                <param name="__q2galaxy__GUI__select__picker__" type="select" label="Select a mechanism">
                                    <option value="collection" selected="true">Use collection to import</option>
                                    <option value="individual">Associate individual files</option>
                                </param>
                                <when value="collection">
                                    <param name="elements" type="data_collection" help="This data should be formatted as a FastqGzFormat. See the documentation below for more information. Elements must match regex: .+_.+_L[0-9][0-9][0-9]_R[12]_001\.fastq\.gz"/>
                                    <conditional name="__q2galaxy__GUI__cond__add_ext__">
                                        <param name="__q2galaxy__GUI__select__ext_pick__" type="select" label="Append an extension?" help="This is needed if your element identifiers lack one.">
                                            <option value="no">No, use element identifiers as is</option>
                                            <option value="yes">Yes, append an extension</option>
                                        </param>
                                        <when value="yes">
                                            <param name="ext" type="text" label="Extension to append (e.g. '.fastq.gz')"/>
                                        </when>
                                        <when value="no"/>
                                    </conditional>
                                </when>
                                <when value="individual">
                                    <repeat name="elements" min="1">
                                        <param name="name" type="text" help="Filename to import the data as. Must match regex: .+_.+_L[0-9][0-9][0-9]_R[12]_001\.fastq\.gz">
                                            <validator type="regex" message="This filename doesn't match the regex.">.+_.+_L[0-9][0-9][0-9]_R[12]_001\.fastq\.gz</validator>
                                        </param>
                                        <param name="data" type="data" help="This data should be formatted as a FastqGzFormat. See the documentation below for more information."/>
                                    </repeat>
                                </when>
                            </conditional>
                        </section>
                        <section name="import_manifest" expanded="true">
                            <param name="name" type="text" value="MANIFEST" help="Filename to import the data as. You shouldn't need to change this unless something is wrong."/>
                            <param name="data" type="data" help="This data should be formatted as a FastqManifestFormat. See the documentation below for more information."/>
                        </section>
                        <section name="import_metadata" expanded="true">
                            <param name="name" type="text" value="metadata.yml" help="Filename to import the data as. You shouldn't need to change this unless something is wrong."/>
                            <param name="data" type="data" help="This data should be formatted as a YamlFormat. See the documentation below for more information."/>
                        </section>
                    </when>
                </conditional>
            </when>
            <when value="SampleData__ob__PairedEndSequencesWithQuality__cb__">
                <conditional name="__q2galaxy__GUI__cond__format__">
                    <param name="format" type="select" label="QIIME 2 file format to import from:">
                        <option value="CasavaOneEightLanelessPerSampleDirFmt" selected="false">Casava One Eight Laneless Per Sample Directory Format</option>
                        <option value="CasavaOneEightSingleLanePerSampleDirFmt" selected="false">Casava One Eight Single Lane Per Sample Directory Format</option>
                        <option value="PairedEndFastqManifestPhred33" selected="false">Paired End Fastq Manifest Phred33</option>
                        <option value="PairedEndFastqManifestPhred33V2" selected="false">Paired End Fastq Manifest Phred33V2</option>
                        <option value="PairedEndFastqManifestPhred64" selected="false">Paired End Fastq Manifest Phred64</option>
                        <option value="PairedEndFastqManifestPhred64V2" selected="false">Paired End Fastq Manifest Phred64V2</option>
                        <option value="SingleLanePerSamplePairedEndFastqDirFmt" selected="true">Single Lane Per Sample Paired End Fastq Directory Format</option>
                    </param>
                    <when value="CasavaOneEightLanelessPerSampleDirFmt">
                        <section name="import_sequences" expanded="true">
                            <conditional name="__q2galaxy__GUI__cond__sequences__">
                                <param name="__q2galaxy__GUI__select__picker__" type="select" label="Select a mechanism">
                                    <option value="collection" selected="true">Use collection to import</option>
                                    <option value="individual">Associate individual files</option>
                                </param>
                                <when value="collection">
                                    <param name="elements" type="data_collection" help="This data should be formatted as a FastqGzFormat. See the documentation below for more information. Elements must match regex: .+_.+_R[12]_001\.fastq\.gz"/>
                                    <conditional name="__q2galaxy__GUI__cond__add_ext__">
                                        <param name="__q2galaxy__GUI__select__ext_pick__" type="select" label="Append an extension?" help="This is needed if your element identifiers lack one.">
                                            <option value="no">No, use element identifiers as is</option>
                                            <option value="yes">Yes, append an extension</option>
                                        </param>
                                        <when value="yes">
                                            <param name="ext" type="text" label="Extension to append (e.g. '.fastq.gz')"/>
                                        </when>
                                        <when value="no"/>
                                    </conditional>
                                </when>
                                <when value="individual">
                                    <repeat name="elements" min="1">
                                        <param name="name" type="text" help="Filename to import the data as. Must match regex: .+_.+_R[12]_001\.fastq\.gz">
                                            <validator type="regex" message="This filename doesn't match the regex.">.+_.+_R[12]_001\.fastq\.gz</validator>
                                        </param>
                                        <param name="data" type="data" help="This data should be formatted as a FastqGzFormat. See the documentation below for more information."/>
                                    </repeat>
                                </when>
                            </conditional>
                        </section>
                    </when>
                    <when value="CasavaOneEightSingleLanePerSampleDirFmt">
                        <section name="import_sequences" expanded="true">
                            <conditional name="__q2galaxy__GUI__cond__sequences__">
                                <param name="__q2galaxy__GUI__select__picker__" type="select" label="Select a mechanism">
                                    <option value="collection" selected="true">Use collection to import</option>
                                    <option value="individual">Associate individual files</option>
                                </param>
                                <when value="collection">
                                    <param name="elements" type="data_collection" help="This data should be formatted as a FastqGzFormat. See the documentation below for more information. Elements must match regex: .+_.+_L[0-9][0-9][0-9]_R[12]_001\.fastq\.gz"/>
                                    <conditional name="__q2galaxy__GUI__cond__add_ext__">
                                        <param name="__q2galaxy__GUI__select__ext_pick__" type="select" label="Append an extension?" help="This is needed if your element identifiers lack one.">
                                            <option value="no">No, use element identifiers as is</option>
                                            <option value="yes">Yes, append an extension</option>
                                        </param>
                                        <when value="yes">
                                            <param name="ext" type="text" label="Extension to append (e.g. '.fastq.gz')"/>
                                        </when>
                                        <when value="no"/>
                                    </conditional>
                                </when>
                                <when value="individual">
                                    <repeat name="elements" min="1">
                                        <param name="name" type="text" help="Filename to import the data as. Must match regex: .+_.+_L[0-9][0-9][0-9]_R[12]_001\.fastq\.gz">
                                            <validator type="regex" message="This filename doesn't match the regex.">.+_.+_L[0-9][0-9][0-9]_R[12]_001\.fastq\.gz</validator>
                                        </param>
                                        <param name="data" type="data" help="This data should be formatted as a FastqGzFormat. See the documentation below for more information."/>
                                    </repeat>
                                </when>
                            </conditional>
                        </section>
                    </when>
                    <when value="PairedEndFastqManifestPhred33">
                        <section name="import" expanded="true">
                            <param name="name" type="hidden" value="__q2galaxy__::literal::None"/>
                            <param name="data" type="data" help="This data should be formatted as a PairedEndFastqManifestPhred33. See the documentation below for more information."/>
                        </section>
                    </when>
                    <when value="PairedEndFastqManifestPhred33V2">
                        <section name="import" expanded="true">
                            <param name="name" type="hidden" value="__q2galaxy__::literal::None"/>
                            <param name="data" type="data" help="This data should be formatted as a PairedEndFastqManifestPhred33V2. See the documentation below for more information."/>
                        </section>
                    </when>
                    <when value="PairedEndFastqManifestPhred64">
                        <section name="import" expanded="true">
                            <param name="name" type="hidden" value="__q2galaxy__::literal::None"/>
                            <param name="data" type="data" help="This data should be formatted as a PairedEndFastqManifestPhred64. See the documentation below for more information."/>
                        </section>
                    </when>
                    <when value="PairedEndFastqManifestPhred64V2">
                        <section name="import" expanded="true">
                            <param name="name" type="hidden" value="__q2galaxy__::literal::None"/>
                            <param name="data" type="data" help="This data should be formatted as a PairedEndFastqManifestPhred64V2. See the documentation below for more information."/>
                        </section>
                    </when>
                    <when value="SingleLanePerSamplePairedEndFastqDirFmt">
                        <section name="import_sequences" expanded="true">
                            <conditional name="__q2galaxy__GUI__cond__sequences__">
                                <param name="__q2galaxy__GUI__select__picker__" type="select" label="Select a mechanism">
                                    <option value="collection" selected="true">Use collection to import</option>
                                    <option value="individual">Associate individual files</option>
                                </param>
                                <when value="collection">
                                    <param name="elements" type="data_collection" help="This data should be formatted as a FastqGzFormat. See the documentation below for more information. Elements must match regex: .+_.+_L[0-9][0-9][0-9]_R[12]_001\.fastq\.gz"/>
                                    <conditional name="__q2galaxy__GUI__cond__add_ext__">
                                        <param name="__q2galaxy__GUI__select__ext_pick__" type="select" label="Append an extension?" help="This is needed if your element identifiers lack one.">
                                            <option value="no">No, use element identifiers as is</option>
                                            <option value="yes">Yes, append an extension</option>
                                        </param>
                                        <when value="yes">
                                            <param name="ext" type="text" label="Extension to append (e.g. '.fastq.gz')"/>
                                        </when>
                                        <when value="no"/>
                                    </conditional>
                                </when>
                                <when value="individual">
                                    <repeat name="elements" min="1">
                                        <param name="name" type="text" help="Filename to import the data as. Must match regex: .+_.+_L[0-9][0-9][0-9]_R[12]_001\.fastq\.gz">
                                            <validator type="regex" message="This filename doesn't match the regex.">.+_.+_L[0-9][0-9][0-9]_R[12]_001\.fastq\.gz</validator>
                                        </param>
                                        <param name="data" type="data" help="This data should be formatted as a FastqGzFormat. See the documentation below for more information."/>
                                    </repeat>
                                </when>
                            </conditional>
                        </section>
                        <section name="import_manifest" expanded="true">
                            <param name="name" type="text" value="MANIFEST" help="Filename to import the data as. You shouldn't need to change this unless something is wrong."/>
                            <param name="data" type="data" help="This data should be formatted as a FastqManifestFormat. See the documentation below for more information."/>
                        </section>
                        <section name="import_metadata" expanded="true">
                            <param name="name" type="text" value="metadata.yml" help="Filename to import the data as. You shouldn't need to change this unless something is wrong."/>
                            <param name="data" type="data" help="This data should be formatted as a YamlFormat. See the documentation below for more information."/>
                        </section>
                    </when>
                </conditional>
            </when>
            <when value="SampleData__ob__Probabilities__cb__">
                <conditional name="__q2galaxy__GUI__cond__format__">
                    <param name="format" type="select" label="QIIME 2 file format to import from:">
                        <option value="ProbabilitiesFormat" selected="true">Probabilities Format</option>
                    </param>
                    <when value="ProbabilitiesFormat">
                        <section name="import" expanded="true">
                            <param name="name" type="hidden" value="__q2galaxy__::literal::None"/>
                            <param name="data" type="data" help="This data should be formatted as a ProbabilitiesFormat. See the documentation below for more information."/>
                        </section>
                    </when>
                </conditional>
            </when>
            <when value="SampleData__ob__RegressorPredictions__cb__">
                <conditional name="__q2galaxy__GUI__cond__format__">
                    <param name="format" type="select" label="QIIME 2 file format to import from:">
                        <option value="PredictionsFormat" selected="true">Predictions Format</option>
                    </param>
                    <when value="PredictionsFormat">
                        <section name="import" expanded="true">
                            <param name="name" type="hidden" value="__q2galaxy__::literal::None"/>
                            <param name="data" type="data" help="This data should be formatted as a PredictionsFormat. See the documentation below for more information."/>
                        </section>
                    </when>
                </conditional>
            </when>
            <when value="SampleData__ob__SequencesWithQuality__cb__">
                <conditional name="__q2galaxy__GUI__cond__format__">
                    <param name="format" type="select" label="QIIME 2 file format to import from:">
                        <option value="CasavaOneEightLanelessPerSampleDirFmt" selected="false">Casava One Eight Laneless Per Sample Directory Format</option>
                        <option value="CasavaOneEightSingleLanePerSampleDirFmt" selected="false">Casava One Eight Single Lane Per Sample Directory Format</option>
                        <option value="SingleEndFastqManifestPhred33" selected="false">Single End Fastq Manifest Phred33</option>
                        <option value="SingleEndFastqManifestPhred33V2" selected="false">Single End Fastq Manifest Phred33V2</option>
                        <option value="SingleEndFastqManifestPhred64" selected="false">Single End Fastq Manifest Phred64</option>
                        <option value="SingleEndFastqManifestPhred64V2" selected="false">Single End Fastq Manifest Phred64V2</option>
                        <option value="SingleLanePerSamplePairedEndFastqDirFmt" selected="false">Single Lane Per Sample Paired End Fastq Directory Format</option>
                        <option value="SingleLanePerSampleSingleEndFastqDirFmt" selected="true">Single Lane Per Sample Single End Fastq Directory Format</option>
                    </param>
                    <when value="CasavaOneEightLanelessPerSampleDirFmt">
                        <section name="import_sequences" expanded="true">
                            <conditional name="__q2galaxy__GUI__cond__sequences__">
                                <param name="__q2galaxy__GUI__select__picker__" type="select" label="Select a mechanism">
                                    <option value="collection" selected="true">Use collection to import</option>
                                    <option value="individual">Associate individual files</option>
                                </param>
                                <when value="collection">
                                    <param name="elements" type="data_collection" help="This data should be formatted as a FastqGzFormat. See the documentation below for more information. Elements must match regex: .+_.+_R[12]_001\.fastq\.gz"/>
                                    <conditional name="__q2galaxy__GUI__cond__add_ext__">
                                        <param name="__q2galaxy__GUI__select__ext_pick__" type="select" label="Append an extension?" help="This is needed if your element identifiers lack one.">
                                            <option value="no">No, use element identifiers as is</option>
                                            <option value="yes">Yes, append an extension</option>
                                        </param>
                                        <when value="yes">
                                            <param name="ext" type="text" label="Extension to append (e.g. '.fastq.gz')"/>
                                        </when>
                                        <when value="no"/>
                                    </conditional>
                                </when>
                                <when value="individual">
                                    <repeat name="elements" min="1">
                                        <param name="name" type="text" help="Filename to import the data as. Must match regex: .+_.+_R[12]_001\.fastq\.gz">
                                            <validator type="regex" message="This filename doesn't match the regex.">.+_.+_R[12]_001\.fastq\.gz</validator>
                                        </param>
                                        <param name="data" type="data" help="This data should be formatted as a FastqGzFormat. See the documentation below for more information."/>
                                    </repeat>
                                </when>
                            </conditional>
                        </section>
                    </when>
                    <when value="CasavaOneEightSingleLanePerSampleDirFmt">
                        <section name="import_sequences" expanded="true">
                            <conditional name="__q2galaxy__GUI__cond__sequences__">
                                <param name="__q2galaxy__GUI__select__picker__" type="select" label="Select a mechanism">
                                    <option value="collection" selected="true">Use collection to import</option>
                                    <option value="individual">Associate individual files</option>
                                </param>
                                <when value="collection">
                                    <param name="elements" type="data_collection" help="This data should be formatted as a FastqGzFormat. See the documentation below for more information. Elements must match regex: .+_.+_L[0-9][0-9][0-9]_R[12]_001\.fastq\.gz"/>
                                    <conditional name="__q2galaxy__GUI__cond__add_ext__">
                                        <param name="__q2galaxy__GUI__select__ext_pick__" type="select" label="Append an extension?" help="This is needed if your element identifiers lack one.">
                                            <option value="no">No, use element identifiers as is</option>
                                            <option value="yes">Yes, append an extension</option>
                                        </param>
                                        <when value="yes">
                                            <param name="ext" type="text" label="Extension to append (e.g. '.fastq.gz')"/>
                                        </when>
                                        <when value="no"/>
                                    </conditional>
                                </when>
                                <when value="individual">
                                    <repeat name="elements" min="1">
                                        <param name="name" type="text" help="Filename to import the data as. Must match regex: .+_.+_L[0-9][0-9][0-9]_R[12]_001\.fastq\.gz">
                                            <validator type="regex" message="This filename doesn't match the regex.">.+_.+_L[0-9][0-9][0-9]_R[12]_001\.fastq\.gz</validator>
                                        </param>
                                        <param name="data" type="data" help="This data should be formatted as a FastqGzFormat. See the documentation below for more information."/>
                                    </repeat>
                                </when>
                            </conditional>
                        </section>
                    </when>
                    <when value="SingleEndFastqManifestPhred33">
                        <section name="import" expanded="true">
                            <param name="name" type="hidden" value="__q2galaxy__::literal::None"/>
                            <param name="data" type="data" help="This data should be formatted as a SingleEndFastqManifestPhred33. See the documentation below for more information."/>
                        </section>
                    </when>
                    <when value="SingleEndFastqManifestPhred33V2">
                        <section name="import" expanded="true">
                            <param name="name" type="hidden" value="__q2galaxy__::literal::None"/>
                            <param name="data" type="data" help="This data should be formatted as a SingleEndFastqManifestPhred33V2. See the documentation below for more information."/>
                        </section>
                    </when>
                    <when value="SingleEndFastqManifestPhred64">
                        <section name="import" expanded="true">
                            <param name="name" type="hidden" value="__q2galaxy__::literal::None"/>
                            <param name="data" type="data" help="This data should be formatted as a SingleEndFastqManifestPhred64. See the documentation below for more information."/>
                        </section>
                    </when>
                    <when value="SingleEndFastqManifestPhred64V2">
                        <section name="import" expanded="true">
                            <param name="name" type="hidden" value="__q2galaxy__::literal::None"/>
                            <param name="data" type="data" help="This data should be formatted as a SingleEndFastqManifestPhred64V2. See the documentation below for more information."/>
                        </section>
                    </when>
                    <when value="SingleLanePerSamplePairedEndFastqDirFmt">
                        <section name="import_sequences" expanded="true">
                            <conditional name="__q2galaxy__GUI__cond__sequences__">
                                <param name="__q2galaxy__GUI__select__picker__" type="select" label="Select a mechanism">
                                    <option value="collection" selected="true">Use collection to import</option>
                                    <option value="individual">Associate individual files</option>
                                </param>
                                <when value="collection">
                                    <param name="elements" type="data_collection" help="This data should be formatted as a FastqGzFormat. See the documentation below for more information. Elements must match regex: .+_.+_L[0-9][0-9][0-9]_R[12]_001\.fastq\.gz"/>
                                    <conditional name="__q2galaxy__GUI__cond__add_ext__">
                                        <param name="__q2galaxy__GUI__select__ext_pick__" type="select" label="Append an extension?" help="This is needed if your element identifiers lack one.">
                                            <option value="no">No, use element identifiers as is</option>
                                            <option value="yes">Yes, append an extension</option>
                                        </param>
                                        <when value="yes">
                                            <param name="ext" type="text" label="Extension to append (e.g. '.fastq.gz')"/>
                                        </when>
                                        <when value="no"/>
                                    </conditional>
                                </when>
                                <when value="individual">
                                    <repeat name="elements" min="1">
                                        <param name="name" type="text" help="Filename to import the data as. Must match regex: .+_.+_L[0-9][0-9][0-9]_R[12]_001\.fastq\.gz">
                                            <validator type="regex" message="This filename doesn't match the regex.">.+_.+_L[0-9][0-9][0-9]_R[12]_001\.fastq\.gz</validator>
                                        </param>
                                        <param name="data" type="data" help="This data should be formatted as a FastqGzFormat. See the documentation below for more information."/>
                                    </repeat>
                                </when>
                            </conditional>
                        </section>
                        <section name="import_manifest" expanded="true">
                            <param name="name" type="text" value="MANIFEST" help="Filename to import the data as. You shouldn't need to change this unless something is wrong."/>
                            <param name="data" type="data" help="This data should be formatted as a FastqManifestFormat. See the documentation below for more information."/>
                        </section>
                        <section name="import_metadata" expanded="true">
                            <param name="name" type="text" value="metadata.yml" help="Filename to import the data as. You shouldn't need to change this unless something is wrong."/>
                            <param name="data" type="data" help="This data should be formatted as a YamlFormat. See the documentation below for more information."/>
                        </section>
                    </when>
                    <when value="SingleLanePerSampleSingleEndFastqDirFmt">
                        <section name="import_sequences" expanded="true">
                            <conditional name="__q2galaxy__GUI__cond__sequences__">
                                <param name="__q2galaxy__GUI__select__picker__" type="select" label="Select a mechanism">
                                    <option value="collection" selected="true">Use collection to import</option>
                                    <option value="individual">Associate individual files</option>
                                </param>
                                <when value="collection">
                                    <param name="elements" type="data_collection" help="This data should be formatted as a FastqGzFormat. See the documentation below for more information. Elements must match regex: .+_.+_L[0-9][0-9][0-9]_R[12]_001\.fastq\.gz"/>
                                    <conditional name="__q2galaxy__GUI__cond__add_ext__">
                                        <param name="__q2galaxy__GUI__select__ext_pick__" type="select" label="Append an extension?" help="This is needed if your element identifiers lack one.">
                                            <option value="no">No, use element identifiers as is</option>
                                            <option value="yes">Yes, append an extension</option>
                                        </param>
                                        <when value="yes">
                                            <param name="ext" type="text" label="Extension to append (e.g. '.fastq.gz')"/>
                                        </when>
                                        <when value="no"/>
                                    </conditional>
                                </when>
                                <when value="individual">
                                    <repeat name="elements" min="1">
                                        <param name="name" type="text" help="Filename to import the data as. Must match regex: .+_.+_L[0-9][0-9][0-9]_R[12]_001\.fastq\.gz">
                                            <validator type="regex" message="This filename doesn't match the regex.">.+_.+_L[0-9][0-9][0-9]_R[12]_001\.fastq\.gz</validator>
                                        </param>
                                        <param name="data" type="data" help="This data should be formatted as a FastqGzFormat. See the documentation below for more information."/>
                                    </repeat>
                                </when>
                            </conditional>
                        </section>
                        <section name="import_manifest" expanded="true">
                            <param name="name" type="text" value="MANIFEST" help="Filename to import the data as. You shouldn't need to change this unless something is wrong."/>
                            <param name="data" type="data" help="This data should be formatted as a FastqManifestFormat. See the documentation below for more information."/>
                        </section>
                        <section name="import_metadata" expanded="true">
                            <param name="name" type="text" value="metadata.yml" help="Filename to import the data as. You shouldn't need to change this unless something is wrong."/>
                            <param name="data" type="data" help="This data should be formatted as a YamlFormat. See the documentation below for more information."/>
                        </section>
                    </when>
                </conditional>
            </when>
            <when value="SampleData__ob__Sequences__cb__">
                <conditional name="__q2galaxy__GUI__cond__format__">
                    <param name="format" type="select" label="QIIME 2 file format to import from:">
                        <option value="QIIME1DemuxFormat" selected="true">QIIME1 Demux Format</option>
                        <option value="SingleLanePerSampleSingleEndFastqDirFmt" selected="false">Single Lane Per Sample Single End Fastq Directory Format</option>
                    </param>
                    <when value="QIIME1DemuxFormat">
                        <section name="import" expanded="true">
                            <param name="name" type="hidden" value="__q2galaxy__::literal::None"/>
                            <param name="data" type="data" help="This data should be formatted as a QIIME1DemuxFormat. See the documentation below for more information."/>
                        </section>
                    </when>
                    <when value="SingleLanePerSampleSingleEndFastqDirFmt">
                        <section name="import_sequences" expanded="true">
                            <conditional name="__q2galaxy__GUI__cond__sequences__">
                                <param name="__q2galaxy__GUI__select__picker__" type="select" label="Select a mechanism">
                                    <option value="collection" selected="true">Use collection to import</option>
                                    <option value="individual">Associate individual files</option>
                                </param>
                                <when value="collection">
                                    <param name="elements" type="data_collection" help="This data should be formatted as a FastqGzFormat. See the documentation below for more information. Elements must match regex: .+_.+_L[0-9][0-9][0-9]_R[12]_001\.fastq\.gz"/>
                                    <conditional name="__q2galaxy__GUI__cond__add_ext__">
                                        <param name="__q2galaxy__GUI__select__ext_pick__" type="select" label="Append an extension?" help="This is needed if your element identifiers lack one.">
                                            <option value="no">No, use element identifiers as is</option>
                                            <option value="yes">Yes, append an extension</option>
                                        </param>
                                        <when value="yes">
                                            <param name="ext" type="text" label="Extension to append (e.g. '.fastq.gz')"/>
                                        </when>
                                        <when value="no"/>
                                    </conditional>
                                </when>
                                <when value="individual">
                                    <repeat name="elements" min="1">
                                        <param name="name" type="text" help="Filename to import the data as. Must match regex: .+_.+_L[0-9][0-9][0-9]_R[12]_001\.fastq\.gz">
                                            <validator type="regex" message="This filename doesn't match the regex.">.+_.+_L[0-9][0-9][0-9]_R[12]_001\.fastq\.gz</validator>
                                        </param>
                                        <param name="data" type="data" help="This data should be formatted as a FastqGzFormat. See the documentation below for more information."/>
                                    </repeat>
                                </when>
                            </conditional>
                        </section>
                        <section name="import_manifest" expanded="true">
                            <param name="name" type="text" value="MANIFEST" help="Filename to import the data as. You shouldn't need to change this unless something is wrong."/>
                            <param name="data" type="data" help="This data should be formatted as a FastqManifestFormat. See the documentation below for more information."/>
                        </section>
                        <section name="import_metadata" expanded="true">
                            <param name="name" type="text" value="metadata.yml" help="Filename to import the data as. You shouldn't need to change this unless something is wrong."/>
                            <param name="data" type="data" help="This data should be formatted as a YamlFormat. See the documentation below for more information."/>
                        </section>
                    </when>
                </conditional>
            </when>
            <when value="SampleData__ob__TrueTargets__cb__">
                <conditional name="__q2galaxy__GUI__cond__format__">
                    <param name="format" type="select" label="QIIME 2 file format to import from:">
                        <option value="PredictionsFormat" selected="true">Predictions Format</option>
                    </param>
                    <when value="PredictionsFormat">
                        <section name="import" expanded="true">
                            <param name="name" type="hidden" value="__q2galaxy__::literal::None"/>
                            <param name="data" type="data" help="This data should be formatted as a PredictionsFormat. See the documentation below for more information."/>
                        </section>
                    </when>
                </conditional>
            </when>
            <when value="SampleEstimator__ob__Classifier__cb__">
                <conditional name="__q2galaxy__GUI__cond__format__">
                    <param name="format" type="select" label="QIIME 2 file format to import from:">
                        <option value="SampleEstimatorDirFmt" selected="true">Sample Estimator Directory Format</option>
                    </param>
                    <when value="SampleEstimatorDirFmt">
                        <section name="import_version_info" expanded="true">
                            <param name="name" type="text" value="sklearn_version.json" help="Filename to import the data as. You shouldn't need to change this unless something is wrong."/>
                            <param name="data" type="data" help="This data should be formatted as a JSONFormat. See the documentation below for more information."/>
                        </section>
                        <section name="import_sklearn_pipeline" expanded="true">
                            <param name="name" type="text" value="sklearn_pipeline.tar" help="Filename to import the data as. You shouldn't need to change this unless something is wrong."/>
                            <param name="data" type="data" help="This data should be formatted as a PickleFormat. See the documentation below for more information."/>
                        </section>
                    </when>
                </conditional>
            </when>
            <when value="SampleEstimator__ob__Regressor__cb__">
                <conditional name="__q2galaxy__GUI__cond__format__">
                    <param name="format" type="select" label="QIIME 2 file format to import from:">
                        <option value="SampleEstimatorDirFmt" selected="true">Sample Estimator Directory Format</option>
                    </param>
                    <when value="SampleEstimatorDirFmt">
                        <section name="import_version_info" expanded="true">
                            <param name="name" type="text" value="sklearn_version.json" help="Filename to import the data as. You shouldn't need to change this unless something is wrong."/>
                            <param name="data" type="data" help="This data should be formatted as a JSONFormat. See the documentation below for more information."/>
                        </section>
                        <section name="import_sklearn_pipeline" expanded="true">
                            <param name="name" type="text" value="sklearn_pipeline.tar" help="Filename to import the data as. You shouldn't need to change this unless something is wrong."/>
                            <param name="data" type="data" help="This data should be formatted as a PickleFormat. See the documentation below for more information."/>
                        </section>
                    </when>
                </conditional>
            </when>
            <when value="SeppReferenceDatabase">
                <conditional name="__q2galaxy__GUI__cond__format__">
                    <param name="format" type="select" label="QIIME 2 file format to import from:">
                        <option value="SeppReferenceDirFmt" selected="true">Sepp Reference Directory Format</option>
                    </param>
                    <when value="SeppReferenceDirFmt">
                        <section name="import_alignment" expanded="true">
                            <param name="name" type="text" value="aligned-dna-sequences.fasta" help="Filename to import the data as. You shouldn't need to change this unless something is wrong."/>
                            <param name="data" type="data" help="This data should be formatted as a AlignedDNAFASTAFormat. See the documentation below for more information."/>
                        </section>
                        <section name="import_phylogeny" expanded="true">
                            <param name="name" type="text" value="tree.nwk" help="Filename to import the data as. You shouldn't need to change this unless something is wrong."/>
                            <param name="data" type="data" help="This data should be formatted as a NewickFormat. See the documentation below for more information."/>
                        </section>
                        <section name="import_raxml_info" expanded="true">
                            <param name="name" type="text" value="raxml-info.txt" help="Filename to import the data as. You shouldn't need to change this unless something is wrong."/>
                            <param name="data" type="data" help="This data should be formatted as a RAxMLinfoFormat. See the documentation below for more information."/>
                        </section>
                    </when>
                </conditional>
            </when>
            <when value="TaxonomicClassifier">
                <conditional name="__q2galaxy__GUI__cond__format__">
                    <param name="format" type="select" label="QIIME 2 file format to import from:">
                        <option value="TaxonomicClassiferTemporaryPickleDirFmt" selected="true">Taxonomic Classifer Temporary Pickle Directory Format</option>
                    </param>
                    <when value="TaxonomicClassiferTemporaryPickleDirFmt">
                        <section name="import_version_info" expanded="true">
                            <param name="name" type="text" value="sklearn_version.json" help="Filename to import the data as. You shouldn't need to change this unless something is wrong."/>
                            <param name="data" type="data" help="This data should be formatted as a JSONFormat. See the documentation below for more information."/>
                        </section>
                        <section name="import_sklearn_pipeline" expanded="true">
                            <param name="name" type="text" value="sklearn_pipeline.tar" help="Filename to import the data as. You shouldn't need to change this unless something is wrong."/>
                            <param name="data" type="data" help="This data should be formatted as a PickleFormat. See the documentation below for more information."/>
                        </section>
                    </when>
                </conditional>
            </when>
            <when value="UchimeStats">
                <conditional name="__q2galaxy__GUI__cond__format__">
                    <param name="format" type="select" label="QIIME 2 file format to import from:">
                        <option value="UchimeStatsFmt" selected="true">Uchime Stats Format</option>
                    </param>
                    <when value="UchimeStatsFmt">
                        <section name="import" expanded="true">
                            <param name="name" type="hidden" value="__q2galaxy__::literal::None"/>
                            <param name="data" type="data" help="This data should be formatted as a UchimeStatsFmt. See the documentation below for more information."/>
                        </section>
                    </when>
                </conditional>
            </when>
        </conditional>
    </inputs>
    <outputs>
        <data name="imported_data" format="qza" from_work_dir="imported_data.qza"/>
    </outputs>
    <help>
QIIME 2: tools import
=====================
Import data as a QIIME 2 artifact

Instructions
------------

 1. Select the type you wish to import. If you are uncertain, consider what
    your next action would be and identify what type it requires.

 2. Identify which format will best suite the data you have available. Many
    types will have only a single format available. There is some documentation
    available below on the different formats, however there may not be
    very much documentation available for your format.

 3. For each part of the format, you will need to associate some data.

    a. If it is a simple format, you may just select the history dataset.
    b. If it is a more complex format, you will need to provide either a
       filename and history dataset, or a collection.
    c. For collections, they can be constructed via matching a regex against
       the names of the items in that collection. (You may need to append an
       extension if your collection's element IDs lack one.) Or you can
       provide individual history datasets with a filename as in the simpler
       cases.

Formats:
--------
These formats have documentation available.

HeaderlessTSVTaxonomyFormat
***************************
Format for a 2+ column TSV file without a header.

This format supports comment lines starting with #, and blank lines.


QIIME1DemuxFormat
*****************
QIIME 1 demultiplexed FASTA format.

The QIIME 1 demultiplexed FASTA format is the default output format of
``split_libraries.py`` and ``split_libraries_fastq.py``. The file output by
QIIME 1 is named ``seqs.fna``; this filename is sometimes associated with
the file format itself due to its widespread usage in QIIME 1.

The format is documented here:
http://qiime.org/documentation/file_formats.html#demultiplexed-sequences

Format details:

- FASTA file with exactly two lines per record: header and sequence. Each
  sequence must span exactly one line and cannot be split across multiple
  lines.

- The ID in each header must follow the format ``&lt;sample-id&gt;_&lt;seq-id&gt;``.
  ``&lt;sample-id&gt;`` is the identifier of the sample the sequence belongs to,
  and ``&lt;seq-id&gt;`` is an identifier for the sequence *within* its sample.
  In QIIME 1, ``&lt;seq-id&gt;`` is typically an incrementing integer starting
  from zero, but any non-empty value can be used here, as long as the
  header IDs remain unique throughout the file. Note: ``&lt;sample-id&gt;`` may
  contain sample IDs that contain underscores; the rightmost underscore
  will used to delimit sample and sequence IDs.

- Descriptions in headers are permitted and ignored.

- Header IDs must be unique within the file.

- Each sequence must be DNA and cannot be empty.


TSVTaxonomyFormat
*****************
Format for a 2+ column TSV file with an expected minimal header.

The only header recognized by this format is:

    Feature ID&lt;tab&gt;Taxon

Optionally followed by other arbitrary columns.

This format supports blank lines. The expected header must be the first
non-blank line. In addition to the header, there must be at least one line
of data.


FastqGzFormat
*************

A gzipped fastq file.


Additional formats without documentation:
*****************************************
 - AlignedRNAFASTAFormat
 - AlignedDNAFASTAFormat
 - QualityFilterStatsFmt
 - PairedEndFastqManifestPhred33
 - PairedDNASequencesDirectoryFormat
 - SingleEndFastqManifestPhred33
 - LSMatFormat
 - DADA2StatsFormat
 - RNAFASTAFormat
 - Bowtie2IndexDirFmt
 - DeblurStatsFmt
 - EMPSingleEndDirFmt
 - DNAFASTAFormat
 - FirstDifferencesFormat
 - ImportanceFormat
 - SingleLanePerSamplePairedEndFastqDirFmt
 - PairedEndFastqManifestPhred64V2
 - BIOMV210Format
 - PlacementsFormat
 - BooleanSeriesFormat
 - ProcrustesStatisticsFmt
 - ProbabilitiesFormat
 - SeppReferenceDirFmt
 - SampleEstimatorDirFmt
 - SingleEndFastqManifestPhred33V2
 - AlphaDiversityFormat
 - OrdinationFormat
 - MultiplexedPairedEndBarcodeInSequenceDirFmt
 - EMPPairedEndDirFmt
 - PairedEndFastqManifestPhred64
 - PairedRNASequencesDirectoryFormat
 - SingleEndFastqManifestPhred64
 - NewickFormat
 - BLAST6Format
 - TaxonomicClassiferTemporaryPickleDirFmt
 - AlignedProteinFASTAFormat
 - CasavaOneEightLanelessPerSampleDirFmt
 - ProteinFASTAFormat
 - SingleLanePerSampleSingleEndFastqDirFmt
 - PairedEndFastqManifestPhred33V2
 - EMPSingleEndCasavaDirFmt
 - EMPPairedEndCasavaDirFmt
 - DifferentialFormat
 - UchimeStatsFmt
 - PredictionsFormat
 - CasavaOneEightSingleLanePerSampleDirFmt
 - SingleEndFastqManifestPhred64V2
 - BIOMV100Format
</help>
    <citations>
        <citation type="bibtex">@article{cite1,
 author = {Bolyen, Evan and Rideout, Jai Ram and Dillon, Matthew R. and Bokulich, Nicholas A. and Abnet, Christian C. and Al-Ghalith, Gabriel A. and Alexander, Harriet and Alm, Eric J. and Arumugam, Manimozhiyan and Asnicar, Francesco and Bai, Yang and Bisanz, Jordan E. and Bittinger, Kyle and Brejnrod, Asker and Brislawn, Colin J. and Brown, C. Titus and Callahan, Benjamin J. and Caraballo-Rodríguez, Andrés Mauricio and Chase, John and Cope, Emily K. and Da Silva, Ricardo and Diener, Christian and Dorrestein, Pieter C. and Douglas, Gavin M. and Durall, Daniel M. and Duvallet, Claire and Edwardson, Christian F. and Ernst, Madeleine and Estaki, Mehrbod and Fouquier, Jennifer and Gauglitz, Julia M. and Gibbons, Sean M. and Gibson, Deanna L. and Gonzalez, Antonio and Gorlick, Kestrel and Guo, Jiarong and Hillmann, Benjamin and Holmes, Susan and Holste, Hannes and Huttenhower, Curtis and Huttley, Gavin A. and Janssen, Stefan and Jarmusch, Alan K. and Jiang, Lingjing and Kaehler, Benjamin D. and Kang, Kyo Bin and Keefe, Christopher R. and Keim, Paul and Kelley, Scott T. and Knights, Dan and Koester, Irina and Kosciolek, Tomasz and Kreps, Jorden and Langille, Morgan G. I. and Lee, Joslynn and Ley, Ruth and Liu, Yong-Xin and Loftfield, Erikka and Lozupone, Catherine and Maher, Massoud and Marotz, Clarisse and Martin, Bryan D. and McDonald, Daniel and McIver, Lauren J. and Melnik, Alexey V. and Metcalf, Jessica L. and Morgan, Sydney C. and Morton, Jamie T. and Naimey, Ahmad Turan and Navas-Molina, Jose A. and Nothias, Louis Felix and Orchanian, Stephanie B. and Pearson, Talima and Peoples, Samuel L. and Petras, Daniel and Preuss, Mary Lai and Pruesse, Elmar and Rasmussen, Lasse Buur and Rivers, Adam and Robeson, Michael S. and Rosenthal, Patrick and Segata, Nicola and Shaffer, Michael and Shiffer, Arron and Sinha, Rashmi and Song, Se Jin and Spear, John R. and Swafford, Austin D. and Thompson, Luke R. and Torres, Pedro J. and Trinh, Pauline and Tripathi, Anupriya and Turnbaugh, Peter J. and Ul-Hasan, Sabah and van der Hooft, Justin J. J. and Vargas, Fernando and Vázquez-Baeza, Yoshiki and Vogtmann, Emily and von Hippel, Max and Walters, William and Wan, Yunhu and Wang, Mingxun and Warren, Jonathan and Weber, Kyle C. and Williamson, Charles H. D. and Willis, Amy D. and Xu, Zhenjiang Zech and Zaneveld, Jesse R. and Zhang, Yilong and Zhu, Qiyun and Knight, Rob and Caporaso, J. Gregory},
 doi = {10.1038/s41587-019-0209-9},
 issn = {1546-1696},
 journal = {Nature Biotechnology},
 number = {8},
 pages = {852-857},
 title = {Reproducible, interactive, scalable and extensible microbiome data science using QIIME 2},
 url = {https://doi.org/10.1038/s41587-019-0209-9},
 volume = {37},
 year = {2019}
}

</citation>
    </citations>
</tool>
