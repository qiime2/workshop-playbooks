---
# This role is for configuring the jump host

- name: set up prereqs
  apt:
    state: latest
    name:
      - nginx
      - nfs-common
      - nfs-kernel-server
      - htop

- name: copy certs
  copy:
    src: "{{ ssl_cert_dir }}/{{ item }}"
    dest: /etc/ssl/{{ item }}
    owner: www-data
    group: www-data
  with_items:
    - "*.qiime2.org.chained.crt"
    - "*.qiime2.org.key"

- name: set up nginx
  template:
    src: nginx.conf
    dest: /etc/nginx/sites-available/default

- name: restart services
  service:
    name: nginx
    state: restarted

- name: create mount point
  file:
    path: /mnt/home
    state: directory
    mode: 0777
    owner: ubuntu
    group: ubuntu

- name: prep shared drive filesystem
  filesystem:
    fstype: ext4
    dev: /dev/nvme1n1

- name: mount ebs
  mount:
    name: /mnt/home
    src: /dev/nvme1n1
    fstype: auto
    state: mounted

- name: set up nfs server
  lineinfile:
    dest: /etc/exports
    insertafter: EOF
    line: "/mnt/home {{ vpc_cidr_block }}(rw,nohide,fsid=0,insecure,no_subtree_check,async)"

- name: set up /etc/skel/.zshrc
  lineinfile:
    dest: /etc/skel/.zshrc
    line: "{{ item }}"
    state: present
    create: yes
  with_items:
    - export PATH="{{ miniconda_path }}/bin:$PATH"
    - export MPLBACKEND=agg
    - export LC_ALL=C.UTF-8
    - export LANG=C.UTF-8
    - source activate qiime2-{{ qiime2_release }}
    - source tab-qiime
    - 'export PS1="working directory: %/"$''\n''"$ "'

- name: ensure skel ssh dir is present
  file:
    path: /etc/skel/.ssh
    state: directory

- name: create workshop working dir
  file:
    path: "{{ item.path }}"
    state: "{{ item.state }}"
  with_items:
    - { path: '/etc/skel/workshop', state: 'directory' }

- name: create user accounts
  user:
    name: "{{ item.name }}"
    password: "{{ item.hash }}"
    group: "{{ item.group }}"
    uid: "{{ item.uid }}"
    shell: /usr/bin/zsh
    createhome: True
    home: "/mnt/home/{{ item.name }}"
    generate_ssh_key: yes
    ssh_key_bits: 2048
    ssh_key_file: .ssh/id_rsa
  with_items: "{{ users }}"
  register: accts

- name: add authorized key
  authorized_key:
    user: "{{ item.name }}"
    state: present
    key: "{{ item.ssh_public_key }}"
  with_items: "{{ accts.results }}"

- name: copy ssh login banner
  template:
    src: sshd_banner
    dest: /etc/ssh/sshd_banner
    owner: root
    group: root
    mode: '0600'

- name: configure ssh for jumping
  template:
    src: sshd_config
    dest: /etc/ssh/sshd_config
    owner: root
    group: root
    mode: '0600'
    validate: /usr/sbin/sshd -t -f %s
    backup: yes

- name: restart services
  service:
    name: "{{ item }}"
    state: restarted
  with_items:
    - ssh
    - nfs-kernel-server
    - nginx
